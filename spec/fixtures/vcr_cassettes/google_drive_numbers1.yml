---
http_interactions:
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 09 Apr 2015 15:38:44 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "error" : "invalid_request",
          "error_description" : "Required parameter is missing: grant_type"
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:38:44 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 09 Apr 2015 15:38:46 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "error" : "invalid_request",
          "error_description" : "Required parameter is missing: grant_type"
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:38:46 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 09 Apr 2015 15:38:47 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "error" : "invalid_request",
          "error_description" : "Required parameter is missing: grant_type"
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:38:47 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 09 Apr 2015 15:39:05 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "error" : "invalid_request",
          "error_description" : "Required parameter is missing: grant_type"
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:39:05 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 09 Apr 2015 15:39:06 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "error" : "invalid_request",
          "error_description" : "Required parameter is missing: grant_type"
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:39:06 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 09 Apr 2015 15:39:08 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "error" : "invalid_request",
          "error_description" : "Required parameter is missing: grant_type"
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:39:08 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Type:
      - application/json
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 09 Apr 2015 15:39:09 GMT
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "error" : "invalid_request",
          "error_description" : "Required parameter is missing: grant_type"
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:39:09 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:46:15 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:15 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '120720'
      Server:
      - GSE
      Age:
      - '6'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.5
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20150326",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:22 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:41:22 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:22 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"28i-YUCcAhcv4gf_YBu5QxambJ8/MTQyODU5MzMwMjUwNQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMVWW2/aSBR+51cgr8RTwMZgbhLqkoR2m5ZsSIDd7HaFBs+x
        PcX2ODNjDKny33dmbAghSZOs1C2yQJw5l+98cy7+ViobSxJjo1c2MCMr+MUj
        IRhHUky00BqsTr9G7dT2xv4cfzj7PI6Dm9H0LLyenN9efQga7vuuc/7HZTie
        DrUZCOQrwy+G3SHV6+mJOwjcVdP35tfHqTNeo2hx1jFHk/Hm99OpM7odZaOv
        0+x8/MXQ5hxC7zOJl8pFIETCe6aZZVnNp9QPASWE11wamRqrubJNBZebb0aJ
        QgEsRgIOY2Hq8iKYDsQTBgjzAECYruu+W8Km/5ZolZQnfY2W42VOULQA/MPD
        0lQkqegHIgorbsBoBH0PhRwqGcE+iL5gaXHNLo0P0XAe1nwukCBuzrZEp75C
        woVJIuRLypXdvF6f7yGdq/NaEvvasQjSaBEjEr6UqweAubkS73ysYVUIfluu
        q75V4f3BCPB5TAfqM7tCTpaOZo0rknz67WZa9U8HV8vZxz/Tdmt40VxW+G2f
        27aVAyVClrwEGEvAwHhdSyMSwWST6AOUJCFxJR00NlcxLsBXpZjX9vLXdiFa
        QMil1bdSWZazQIyB6iTN/pGSBQRjiB+IBEPSw0M1Blww4ooD8YpApkWKqlL5
        TsV0JQSpdyq/FFzbqjtVq1Ft1CdWu9d0elan5jTtv/K8KCYeOVRuVq3upO70
        7E7PtmuO5TxUPt6M4FUGIeJiphE+Z9LoOV351OpWu4iB2BLwY6N6t21Vrbp8
        JpbV00/NsqzcaCXvSd6G0uvkt5ggBrFQxP8taVLkH062XOMSPJC/rq7+8v2Y
        u7ivt+myezEbFOc/fiCZBXTzeRC5xn+B8ZxHwi8pFbsyKt+Vyv/o6bROKNOR
        djW8X/0J9l5uZUyzOKQI708xbg6157dPshzRe8oiJPoq/tEhqHVVNSVFXJJA
        E4glqjSSfD3ozZ+JmmL+GLXGLNGuo9DTarxKPY+48BT8KKz9/DTWIV8bxchJ
        ObALYBHhRR/qUjlouPtznf3rXg3mw6BpH6PR9IRnUStpzGdNazPmczoe5u8I
        256N8hb+Xzp0lwk3t2EZzbeG5BtYLhLFvlDkbIm6SalAxxsBfMohnzV6Xmmz
        cxTBdmQZsiHLl+liYxStqDW+N9B0mLydMeFJiDbKnzrfudo2+yAVgSwpVXuA
        p8ou7/xivOzS+5gjbDfaTqPTdFrdVrPR6lgNq1m4gkhu9AHGcjspaJIFyhY+
        RL/66kARbexNE7UORmqHbEjsq7BPAXys9XQ57dL9brYvJPv6XF+Xqr5jwESg
        hS6HIo7h0mRzIMoYkS+d/ATFV4Gc53snXP3fX/NqUMg9iE5oLIqtpo9Kd6V/
        AY+tLTiyCwAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:22 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:23 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:23 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=VmuQfNbY_NTzptOMlKGTNr4qyG-fkjUtq1m84gIdNDy5LwUkwGYoOVXq5GG0n_B4F0eN5jllheFxncZNOvP64HXjKxSMSC7ntblTyuPaNG8RZosE7ktAFXMs5Ct_R843;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:23 GMT;HttpOnly
      - NID=67=o2R039HlxEyIf2Ro8-J-_07MG21OSlQE7urT2ijJjAPCrnAtAt1Jm9CCycON9W7U56Cl6jN4kc5n_zLFkLmnGbxH_tAb13C613lt7Q9BCQl0QmpQA77G5pkesSEZxcmD;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:23 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyVXU/bMBSG/0okpOViIk7ahNDghnV8CTSQWiiM3UwmcZMM
        Jw62Q4FfPydZP6Cio1WFkqpXkX18znlf23kM959iojxixiOatFVD01UFJx71
        oyRoq/2r4+1ddd+FA4x9Ra5MeFsNhUgdAIbDoTZsapQFoKHrFugIGqvlGoem
        OLnEiHnheDlqaR6NwTbgKfZAvoAXC4ChGWCUF0zKcy/EMeJaQGlAcJHLU4aR
        z0OMBc977ozT/HlppT5VCXwHCyRd3YAvDxkVewf97lG3ye3BpbBP407rZ693
        d9zvamVUdWHku3lZnted6j1dPN8YDoaU3f/TpXceD//EdtYYdIPf/snZj24S
        Ppz3z8jt1cXL5UnY9I5b1sVNj3T7RyBl0SMSGAwyQiCQ7WCW+nLCdxu6YW3r
        5rbeujIsp7HrNBqapVu/IBitgJ78BJQ9K4VnvODOCczihVK2xiZV4EIRCYLd
        JIvv5NUxICjHkETJvcIwaauIyA6JlChbPadSncBPAoQiJqoSMjwoe8/bWs/z
        9u/xc3uRHc2lTTT8705s5ac30ofSlERyT+V/AJC8y1+fPi51dbdgQQMp5aLK
        Bjgmg+rpQ5kIKXNhgmLsMkrZXYBjCIohlDsdkfHstyAf5hogKCMQjNInlHME
        FYj0MM+I4K4FwXuh6RwuEBOniY+fXONVxlQA4kTIP3yMrhJN19edwWFo3Z5E
        Obi+pzf6+SdCi/o7C7NKnr2D/UiMXhFHTrzzkthAxtQ5RSe1KsHAK3SHCcET
        Bno0EfLY5tz6vSJUwocz76PXn0RcLHxUS9Fl1rgnPfLV4rIo+Tl+HiOeIRK9
        lHKlod2tV1OdNFqFL/Gw8IP1BcXpXlGpLc1VHZ5gRmP+I1ZTY8AdRocHNEuE
        a+xCMD3Ogx4l5cAuYuOh5HzO3HfQe3s4ZPj59FNxa29wO8HthXykFTpQLvNp
        pVFN6tprRt3l/NSEunYNqGvXgLr2DHXNOdS1qk5dc0PdCXUL2jarCVtzzWC7
        nJ+awNasAWzNGsDWnIGtPg+2zarT1trQ9g1tzWrS1loz2i7npya0tWpAW6sG
        tLUWo23VYYs2sH0DW6uasEVrBtvl/NQEtqgGsEU1gC1aCWwLTe5fAAAA//8D
        ADL31UvfIAAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:23 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:23 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:23 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=fNQpiVfjQfEpdJCxsP4QuWT0GjN81Z4iL4lfmuEXOM9TGSlUIXsyOhYp9u0xxTtiZUPB3MgtXc55wx33mM_fILxk0e4iX5wgfBiY4yOt5LZ40R_139EBBDMINWcoRrHv;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:23 GMT;HttpOnly
      - NID=67=wduUV2uUBS1SbBJUgBNY_JaE9GkoKZ8I1QVou7W5WgChvuuqnzbnaMRsZ9jwtz6t4z-PkgNLM3pfaMJeTfSHaqtxsnSdgKMvOVWofbsSdnPiT1Ab7JV8gQi3Jsb3ZG4p;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:23 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOycDW+iSBiA/4rJJsddLhVmnEHxqHtWpd3e2V38bHvZXFiY
        KlcEV8atvV9/gKJWhp5kd1knIWlikQ+HGR+QZ973Vd+uZk7pC1n4tueeC6As
        CSXimp5lu5NzYTjQzmrC24b6QIhVCrZ0/XNhSum8LopPT0/lp0rZW0xEKElY
        bFJvJqy3qXtz4vaJsTCn280NpWx6M/FM9OfEFMMN/GgDEZSBGO/3yaB7u/jm
        lMwMvzzxvIlDot0nlkENMdos3mfiv7aDP18Qw/KnhFA/bKe83c169XOicxJK
        E6tOqBH0xFj86fPSo7+1hnpHr/jVhz6tvps1ldte75M21MvrtUJDta1GeFg/
        PO7eZ+8fPOxMXzSJ4/ii1PzS/mdWXcIHffK3dXn9p+5OP3eH187d4Obf/uW0
        YmoKvhn3HH3YET1LFucL+4tBifiwdBxVDD5NXc6DTiFWA0oAn0noTFIGANdh
        rQ5hGUv4XhXjLVQzeJl4i+dSdMokY8dRsphl2uVNeI6C2FCpTR3SGBifgmUC
        VHG9rDq2+1haEOdcMJzg4G7QuuBTnudBwyhZUXFKZ45Qmi7Iw/pjX+tU0zTf
        PpLn8ywdGjZt14b/+za8Ccctbp8xnzt20J0BNaIRfPN/XR3f1G82/hnbP/d8
        ynP7N9if0AlsrkQvTsMnzsNJNTJsnrGkU2/RUF1jRhoLz1t8mpCZKkaLatDd
        trN99/dJuBg2QRXXa1Qx3n13Xa9TjxpOj/hLh/oNBFUxbd3+Tj41FvSda5FV
        A7zYY2+FOvHrC++p5S1d2gA1VdxfDleanrNeqEbrtosqcWlwadtesteX5Pbm
        Qp3bBboHWiDzhTn4otSJZdP4LlsP3ki501bFYJ3wykF3x/rRF/zm7lJvei4l
        4YCqYvzvKTMTjeJLrsMuPc02hhAEhysFlAS/4IRSQET0arvzJR0ZzpJEi+5y
        Rha2Gb8R/NILR2OzcwB5hE8KRQFBoCN5mmbTap4kwYKkiJ+LJEmQH5IgByTB
        VJLgS5LgIUkwJAkeT9LFrLNq6uOcSaoUJEX8tJIkVfghqcIBSZVUkiovSaoc
        klQJSapkIAl1tNFo+JwvSaggKeKnnSQJ8UMS4oAklEoSekkSOiQJhSShY0m6
        awPj9um+1wlIejcp5yezgnPEBU0RQx3Gs5LED06YA5xwKk74JU7n/WH3517r
        rzP0sR6+gI+/JB6fpOj5SToeMenmFnRHV638EZMLxCKwNMZDFEeIyRwgJqci
        JqcghlMRgxFi8GjEyPP15IO++uPy2c8RL1jYvtj2wQRemBe6IAe2DzJsH2Tb
        PnzIEg5RwhmerOh49HQ/7Of5ZAUL2xfbviRJMj8knb7tgwzbB9m2Tz4kSQ5J
        kjOQ5I6H3lU/V9sHC9sX274kSVV+SDp92wcZtg+ybV/1kKRqSFI1A0l43Gv2
        9FxtHyxsX2z7kiTV+CHp9G0fZNg+yLZ9tUOSaiFJtUy276I56ueuImBh+2Lb
        l6RJ4Yem05d9kCH7IFv2KYc0KSFNSgax917TlQ8XP4CmQuxtxF6SJkp8yg9Q
        p6/2IEPtQbbaC7te2AzA0Qxd3WrdfsfOn6FqwVBEzmWSIcBNsF4wjBwQVE0l
        qHoQrJeM1luH6x0drxe68Pea1tP6ebpwVLjw2IUjjmdzEQcyHDFkOEoJfZW+
        dvI28uFOtzXI1T2gwofHPpxBEzf3JsSBEEcMIY7YQvzr702RE39sdkP/kCdN
        hRPfOHEGTdwEkyMOpDhiSHHEluIgEU0OonBykCWeHI+nVk/Pda4WFV489uIM
        mrgJKEcciHHEEOOILcZBIqIcRCHl4OiY8rs2sLQmvhrkbiJQ4cZjN84gipvA
        csSBHEcMOY7YchwkIstBFFoOMsSW6+TWsW7yD3zFhY2IbQROBr4CEQR/iszN
        cxTmwEpghpXAbCuxG4BE3CuUpSjKaH+Mjk7TVToAXY9y/TEoF6DFoMnJiSiD
        GrwgJnOAmMxATGYjFna9sBmAI29Wl+bDcKLftfp536xqhZ6I9UQtydDU9m3f
        5CbeqMaBpKgxJEWNLSni7hf2BuJonjqavhoPcv/xpxSCIhYUSgpPFjcRRwoH
        mkJhaAqFrSni7hf2BuJInq6k7mh0f32R+/0JFFWNdlWNknmE64E0+JmVAlzU
        N2IWOEqpcLQdAmF/NI4PlzAmWndo5xkuAYrcwR1TyfAjxA9MPKQPAlb+IEhJ
        IEQJK4GiWV6UZZaXtlf6MF8VAYokwl3JMAZS3MzzAh7yCAErkRCkZBKixFQv
        iqZ6UZapXrfdeWwN8i0dVmQT7mqHMZDiZrIX8JBQCFgZhSAlpRAl5ntRNN+L
        stQQw+2LWreXbw2xIq1wV0SMgRQ3s72Ah8xCwEotBCm5hShZSmxdSyxLMTFL
        nw77vfwrHRX5hbtqYgysuKnGAnhIMQSsHEOQkmSIEhVZUFSSBR1dkyVUFPfT
        R3KRa3UjUARR7BRFMoqCI0XBQ/gEYMVPgJQAim+jKJqS+T7noua4UBRbRcFA
        ih9FgXlQFJilKPD3VBRNrXmfc3VzXCiKraJgIMWPosA8KArMUhT4eyqKZgdd
        5VzmHBeKYqsoGEjxoyjwEYriPwAAAP//7J3RboIwFIZfhbtebVKxtXKxxE0g
        msxFnWR65wIq2+ISjXPx6Vd1oNjD0htxJynhAQo/H5Qvp6f/ZZAwUhdRFM/U
        H3jll1EwoygyRQFghUdRMAyKgkGKgl1KUYyCUXf43Q7vy99GwJSgHzWFWoMe
        J4v1IvpK4uU2maEhDEM1OoXK0WlBPXouBnKeii5jduCHfn9wDcaMt0i9hcrY
        dhMnKCFD4DA45DA47DDyORAlF90Z4qc/7M2D8tcBy4s1LiN1GSpm0RIpZgi8
        Boe8Boe9Rj4HouSi+zVrt70effDL/xHjxm9kfkPFbJcjSswQuA4OuQ4Ou458
        DkTJRRezKH5pdibBNSaNxnekvkPFbLqOF1OUnCGQHxySHxyWH2dBEDUZ3QVa
        ohs252Ov/OInYRRIpkDUJcQOrdhsfx1oIBMY/IeA/IeA/ccxA2Xj30bVOWz+
        exKTLnGrqbfpj68whRRGiGRCRCUuSuKVNZevT2vysbJacnw3T69v8Tuatuy7
        fDEACLgRAbuRwkjIX2npGpPZox/6vVb5c0zTO+NoTFQOabUiTzn6mkWrrjxt
        NI2oKYZGGhTqpEELWmkAYahVjA3B5JMlnN+DwBHq/vp1xuGm4ZXf0UbeF2NY
        UsMCYOm4Ne7iaby7ixMDi4BbEUXdQg8JnANo37K6U2fkJCKFtf2g734AAAD/
        /wMAPN/SBj2TAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:23 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:46:15 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:15 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '120720'
      Server:
      - GSE
      Age:
      - '9'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.5
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20150326",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:24 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:41:24 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:24 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"28i-YUCcAhcv4gf_YBu5QxambJ8/MTQyODU5MzMwMjUwNQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMVWW2/aSBR+51cgr8RTwMbgcJFQF5K02ijQkECidLtCg+fY
        nmJ73Jkxxqny33dm7BBCkiZZqVtkgThzLt/55lz8o1I1ViTGRr9qYEbW8IdH
        QjAOpJhooTVcH3+LOqntTf0F/nR6No2D7+P5aXgzm9xefgpa7seeM7m+CKfz
        E20GAvnK8Kthd0n9Zn7kDgN33fa9xc0odaYbFC1Pu+Z4Ns0/H8+d8e04G3+b
        Z5PpV0Obcwi9MxKvlItAiIT3TTPLsoZPqR8CSghvuDQyNVZzbZsKLjffjRKF
        AliMBOzHwtTlZTAdiCcMEOYBgDBd1/2wgnzwnmi1lCcDjZbjVUFQtAT8y8PS
        VCSpGAQiCmtuwGgEAw+FHGoZwT6IgWBpec0ujffRcB42fC6QIG7BtkSnvkLC
        hUki5EvKld2i2VzsIF2o80YS+9qxCNJoGSMSvparB4C5uRYffKxh1Qh+X67r
        gVXjg+EY8CSmQ/W5ukTO5iTDDF27NJgsrkfJVe6enaVB6wsEG6l+O+C2bRVA
        iZAlLwHGEjAw3tTSiEQwyxN9gJIkJK6kg8bmOsYl+LoU88ZO/touREsIubT6
        UanKchaIMVCdpNk/ULKAYAzxI5FgSHp4rMaAC0ZcsSdeE8i0SFFVqd6pmK6E
        IPWO5ZeCa1tNp2616q3mzOr0207f6jactv2lyIti4pF95Xbd6s2aTt/u9m27
        4VjOY+VRPoY3GYSIiyuN8CWTVt/pyafRtDplDMRWgJ8aNXsdq2415TOzrL5+
        GpZlFUZreU/yNpRet7jFBDGIhSL+b0mTIn9/shUaF+CB/HV19Vcfxtz5Q73N
        V73zq2F5/usHkllCN18GUWj8FxgveST8glKxLaPqXaX6j55Om4QyHWlbw7vV
        n2Dv9VbGNItDivDuFOPmifb8/klWIPpIWYTEQMU/2Ae1qaumpIhLEmgCsUSV
        RpKvR735O1FTzJ+i1pgl2k0UelqN16nnEReegx+Fjd+fxibkG6McOSkHdg4s
        IrzsQ10qew33cK6zf9urweIkaNsjNJ4f8Sw6TFqLq7aVT/mCTk+Kd4T7no2K
        Fv5fOnSbCTfvwzJabA3JN7BCJMp9oci5J+p7SgUa5QL4nEMxa/S80mYTFMH9
        yDJkQ1Yv0mVulK2oNX420HSYop0x4UmIcuVPnW9d3Tf7MBWBLClVe4Dnyq7o
        /HK8bNP7q0DYaXWcVrftHPYO263DrtWy2qUriORGH2Ist5OCJlmgbOlD9Kev
        DhTRxs40UetgrHZITmJfhX0O4FOt58tpm+5Ps30l2bfn+rZU9R0DJgItdTmU
        cQyXJvmeKGNEvnTyIxRfBnKe75xw9X93zatBIfcgOqKxKLeaPqrcVf4FYJAB
        3LILAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:24 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:25 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:25 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=ZAOYneWlZmdKARS3-Z8meXGPfGG0wWOTmKaWhV1JGtWsod5q2OojePL7qH3IoDoyzRXIhQVLXPi5faKYs8b4VwGkA1QyMVEf8O9x4TPUrQG9cR75wXysWg8AxYtPMlnt;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:25 GMT;HttpOnly
      - NID=67=sxT4tEJ-zT5ik3oz-yqUxufhz38MLn9oRVz7BSDRK12JTBCNIeFeWh83OwmyxN5C7m4X3vhKznndXk_0aQwaTzR0azLKQcYjeX-cdCD-D5rpRcVaKBOOUeMPM2K0OreJ;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:25 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyVXU/bMBSG/0okpOViIk7ahNDghnV8CTSQWiiM3UwmcZMM
        Jw62Q4FfPydZP6Cio1WFkqpXkX18znlf23kM959iojxixiOatFVD01UFJx71
        oyRoq/2r4+1ddd+FA4x9Ra5MeFsNhUgdAIbDoTZsapQFoKHrFugIGqvlGoem
        OLnEiHnheDlqaR6NwTbgKfZAvoAXC4ChGWCUF0zKcy/EMeJaQGlAcJHLU4aR
        z0OMBc977ozT/HlppT5VCXwHCyRd3YAvDxkVewf97lG3ye3BpbBP407rZ693
        d9zvamVUdWHku3lZnted6j1dPN8YDoaU3f/TpXceD//EdtYYdIPf/snZj24S
        Ppz3z8jt1cXL5UnY9I5b1sVNj3T7RyBl0SMSGAwyQiCQ7WCW+nLCdxu6YW3r
        5rbeujIsp7HrNBqapVu/IBitgJ78BJQ9K4VnvODOCczihVK2xiZV4EIRCYLd
        JIvv5NUxICjHkETJvcIwaauIyA6JlChbPadSncBPAoQiJqoSMjwoe8/bWs/z
        9u/xc3uRHc2lTTT8705s5ac30ofSlERyT+V/AJC8y1+fPi51dbdgQQMp5aLK
        Bjgmg+rpQ5kIKXNhgmLsMkrZXYBjCIohlDsdkfHstyAf5hogKCMQjNInlHME
        FYj0MM+I4K4FwXuh6RwuEBOniY+fXONVxlQA4kTIP3yMrhJN19edwWFo3Z5E
        Obi+pzf6+SdCi/o7C7NKnr2D/UiMXhFHTrzzkthAxtQ5RSe1KsHAK3SHCcET
        Bno0EfLY5tz6vSJUwocz76PXn0RcLHxUS9Fl1rgnPfLV4rIo+Tl+HiOeIRK9
        lHKlod2tV1OdNFqFL/Gw8IP1BcXpXlGpLc1VHZ5gRmP+I1ZTY8AdRocHNEuE
        a+xCMD3Ogx4l5cAuYuOh5HzO3HfQe3s4ZPj59FNxa29wO8HthXykFTpQLvNp
        pVFN6tprRt3l/NSEunYNqGvXgLr2DHXNOdS1qk5dc0PdCXUL2jarCVtzzWC7
        nJ+awNasAWzNGsDWnIGtPg+2zarT1trQ9g1tzWrS1loz2i7npya0tWpAW6sG
        tLUWo23VYYs2sH0DW6uasEVrBtvl/NQEtqgGsEU1gC1aCWwLTe5fAAAA//8D
        ADL31UvfIAAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:25 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:25 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:25 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=OlZyke2zrNWe4_RAUfaFS2WrpPt1WUY35Ol9SgKzj25WmTlpKPCEz0pNhVuvSuQf9pdQo3Hir6rDoB1BanwO13ud251Jrx0XDs_5-0hRqYyyoXWyrefU7W5Rt6s_3Jkn;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:25 GMT;HttpOnly
      - NID=67=fzdm3L_dfvs57DmLMzROc3QEJ9HW1CWmY29RDNXNAQKhWqmmDgv5gAxRu2HL3FGWvAMpFSiEnOU6F_ltnb5pu15VMAlBes-NL7lB3ZgGJqnlrrscns9tw1tCdchGw-VP;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:25 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOycDW+iSBiA/4rJJsddLhVmnEHxqHtWpd3e2V38bHvZXFiY
        KlcEV8atvV9/gKJWhp5kd1knIWlikQ+HGR+QZ973Vd+uZk7pC1n4tueeC6As
        CSXimp5lu5NzYTjQzmrC24b6QIhVCrZ0/XNhSum8LopPT0/lp0rZW0xEKElY
        bFJvJqy3qXtz4vaJsTCn280NpWx6M/FM9OfEFMMN/GgDEZSBGO/3yaB7u/jm
        lMwMvzzxvIlDot0nlkENMdos3mfiv7aDP18Qw/KnhFA/bKe83c169XOicxJK
        E6tOqBH0xFj86fPSo7+1hnpHr/jVhz6tvps1ldte75M21MvrtUJDta1GeFg/
        PO7eZ+8fPOxMXzSJ4/ii1PzS/mdWXcIHffK3dXn9p+5OP3eH187d4Obf/uW0
        YmoKvhn3HH3YET1LFucL+4tBifiwdBxVDD5NXc6DTiFWA0oAn0noTFIGANdh
        rQ5hGUv4XhXjLVQzeJl4i+dSdMokY8dRsphl2uVNeI6C2FCpTR3SGBifgmUC
        VHG9rDq2+1haEOdcMJzg4G7QuuBTnudBwyhZUXFKZ45Qmi7Iw/pjX+tU0zTf
        PpLn8ywdGjZt14b/+za8Ccctbp8xnzt20J0BNaIRfPN/XR3f1G82/hnbP/d8
        ynP7N9if0AlsrkQvTsMnzsNJNTJsnrGkU2/RUF1jRhoLz1t8mpCZKkaLatDd
        trN99/dJuBg2QRXXa1Qx3n13Xa9TjxpOj/hLh/oNBFUxbd3+Tj41FvSda5FV
        A7zYY2+FOvHrC++p5S1d2gA1VdxfDleanrNeqEbrtosqcWlwadtesteX5Pbm
        Qp3bBboHWiDzhTn4otSJZdP4LlsP3ki501bFYJ3wykF3x/rRF/zm7lJvei4l
        4YCqYvzvKTMTjeJLrsMuPc02hhAEhysFlAS/4IRSQET0arvzJR0ZzpJEi+5y
        Rha2Gb8R/NILR2OzcwB5hE8KRQFBoCN5mmbTap4kwYKkiJ+LJEmQH5IgByTB
        VJLgS5LgIUkwJAkeT9LFrLNq6uOcSaoUJEX8tJIkVfghqcIBSZVUkiovSaoc
        klQJSapkIAl1tNFo+JwvSaggKeKnnSQJ8UMS4oAklEoSekkSOiQJhSShY0m6
        awPj9um+1wlIejcp5yezgnPEBU0RQx3Gs5LED06YA5xwKk74JU7n/WH3517r
        rzP0sR6+gI+/JB6fpOj5SToeMenmFnRHV638EZMLxCKwNMZDFEeIyRwgJqci
        JqcghlMRgxFi8GjEyPP15IO++uPy2c8RL1jYvtj2wQRemBe6IAe2DzJsH2Tb
        PnzIEg5RwhmerOh49HQ/7Of5ZAUL2xfbviRJMj8knb7tgwzbB9m2Tz4kSQ5J
        kjOQ5I6H3lU/V9sHC9sX274kSVV+SDp92wcZtg+ybV/1kKRqSFI1A0l43Gv2
        9FxtHyxsX2z7kiTV+CHp9G0fZNg+yLZ9tUOSaiFJtUy276I56ueuImBh+2Lb
        l6RJ4Yem05d9kCH7IFv2KYc0KSFNSgax917TlQ8XP4CmQuxtxF6SJkp8yg9Q
        p6/2IEPtQbbaC7te2AzA0Qxd3WrdfsfOn6FqwVBEzmWSIcBNsF4wjBwQVE0l
        qHoQrJeM1luH6x0drxe68Pea1tP6ebpwVLjw2IUjjmdzEQcyHDFkOEoJfZW+
        dvI28uFOtzXI1T2gwofHPpxBEzf3JsSBEEcMIY7YQvzr702RE39sdkP/kCdN
        hRPfOHEGTdwEkyMOpDhiSHHEluIgEU0OonBykCWeHI+nVk/Pda4WFV489uIM
        mrgJKEcciHHEEOOILcZBIqIcRCHl4OiY8rs2sLQmvhrkbiJQ4cZjN84gipvA
        csSBHEcMOY7YchwkIstBFFoOMsSW6+TWsW7yD3zFhY2IbQROBr4CEQR/iszN
        cxTmwEpghpXAbCuxG4BE3CuUpSjKaH+Mjk7TVToAXY9y/TEoF6DFoMnJiSiD
        GrwgJnOAmMxATGYjFna9sBmAI29Wl+bDcKLftfp536xqhZ6I9UQtydDU9m3f
        5CbeqMaBpKgxJEWNLSni7hf2BuJonjqavhoPcv/xpxSCIhYUSgpPFjcRRwoH
        mkJhaAqFrSni7hf2BuJInq6k7mh0f32R+/0JFFWNdlWNknmE64E0+JmVAlzU
        N2IWOEqpcLQdAmF/NI4PlzAmWndo5xkuAYrcwR1TyfAjxA9MPKQPAlb+IEhJ
        IEQJK4GiWV6UZZaXtlf6MF8VAYokwl3JMAZS3MzzAh7yCAErkRCkZBKixFQv
        iqZ6UZapXrfdeWwN8i0dVmQT7mqHMZDiZrIX8JBQCFgZhSAlpRAl5ntRNN+L
        stQQw+2LWreXbw2xIq1wV0SMgRQ3s72Ah8xCwEotBCm5hShZSmxdSyxLMTFL
        nw77vfwrHRX5hbtqYgysuKnGAnhIMQSsHEOQkmSIEhVZUFSSBR1dkyVUFPfT
        R3KRa3UjUARR7BRFMoqCI0XBQ/gEYMVPgJQAim+jKJqS+T7noua4UBRbRcFA
        ih9FgXlQFJilKPD3VBRNrXmfc3VzXCiKraJgIMWPosA8KArMUhT4eyqKZgdd
        5VzmHBeKYqsoGEjxoyjwEYriPwAAAP//7J3RboIwFIZfhbtebVKxtXKxxE0g
        msxFnWR65wIq2+ISjXPx6Vd1oNjD0htxJynhAQo/H5Qvp6f/ZZAwUhdRFM/U
        H3jll1EwoygyRQFghUdRMAyKgkGKgl1KUYyCUXf43Q7vy99GwJSgHzWFWoMe
        J4v1IvpK4uU2maEhDEM1OoXK0WlBPXouBnKeii5jduCHfn9wDcaMt0i9hcrY
        dhMnKCFD4DA45DA47DDyORAlF90Z4qc/7M2D8tcBy4s1LiN1GSpm0RIpZgi8
        Boe8Boe9Rj4HouSi+zVrt70effDL/xHjxm9kfkPFbJcjSswQuA4OuQ4Ou458
        DkTJRRezKH5pdibBNSaNxnekvkPFbLqOF1OUnCGQHxySHxyWH2dBEDUZ3QVa
        ohs252Ov/OInYRRIpkDUJcQOrdhsfx1oIBMY/IeA/IeA/ccxA2Xj30bVOWz+
        exKTLnGrqbfpj68whRRGiGRCRCUuSuKVNZevT2vysbJacnw3T69v8Tuatuy7
        fDEACLgRAbuRwkjIX2npGpPZox/6vVb5c0zTO+NoTFQOabUiTzn6mkWrrjxt
        NI2oKYZGGhTqpEELWmkAYahVjA3B5JMlnN+DwBHq/vp1xuGm4ZXf0UbeF2NY
        UsMCYOm4Ne7iaby7ixMDi4BbEUXdQg8JnANo37K6U2fkJCKFtf2g734AAAD/
        /wMAPN/SBj2TAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:26 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:46:15 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:15 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '120720'
      Server:
      - GSE
      Age:
      - '11'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.5
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20150326",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:26 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:41:27 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:27 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"28i-YUCcAhcv4gf_YBu5QxambJ8/MTQyODU5MzMwMjUwNQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMVWW2/iOBR+51egrMRTISGQcpHQLL1Md6qhWyh0t7uzQiY+
        STwkcWo7hHTU/762Eyil7bRdaXZQBOL4XL7z+VzyrVI1liTGRr9qYEZW8ItH
        QjAOpJhooTVcnXyNOqntjf05Pjv/PI6D29HsPLyZXtxdnQUt92PPufhjEo5n
        p9oMBPKV4RfD7pL6zezYHQbuqu1785uj1BmvUbQ475qj6Tj//WTmjO5G2ejr
        LLsYfzG0OYfQ+0zipXIRCJHwvmlmWdbwKfVDQAnhDZdGpsZqrmxTweXmu1Gi
        UACLkYD9WJi6vAymA/GEAcI8ABCm67oflpAP3hOtlvJkoNFyvCwIihaAf3hY
        mookFYNARGHNDRiNYOChkEMtI9gHMRAsLa/ZpfE+Gs7Dhs8FEsQt2Jbo1FdI
        uDBJhHxJubKbN5vzHaRzdd5IYl87FkEaLWJEwtdy9QAwN1fig481rBrB78t1
        NbBqfDAcAb6I6VB9rq+Qs87Hmdu9Pf3z+oYc3zILe1lzcta+/c1PaI3fDbht
        WwVQImTJS4CxBAyMN7U0IhFM80QfoCQJiSvpoLG5inEJvi7FvLGTv7YL0QJC
        Lq2+VaqynAViDFQnafYPlCwgGEP8SCQYkh4eqzHgghFX7IlXBDItUlRVqvcq
        pishSL0T+aXg2lbTqVuteqs5tTr9ttO3ug2nbf9V5EUx8ci+crtu9aZNp293
        +7bdcCznsfJRPoI3GYSIi2uN8CWTVt/pyafRtDplDMSWgJ8aNXsdq2415TO1
        rL5+GpZlFUYreU/yNpRet7jFBDGIhSL+b0mTIn9/shUaE/BA/rq6+qsPY+7y
        od5my97l9bA8//EDySyhmy+DKDT+C4yXPBI+oVRsy6h6X6n+o6fTOqFMR9rW
        8G71J9h7vZUxzeKQIrw7xbh5qj2/f5IViD5SFiExUPEP9kGt66opKeKSBJpA
        LFGlkeTrUW/+TNQU86eoNWaJdh2Fnlbjdep5xIXn4Edh4+ensQ752ihHTsqB
        XQKLCC/7UJfKXsM9nOvs3/ZqMD8N2vYRGs2OeRYdJq35ddvKx3xOx6fFO8Km
        Z6Oihf+XDt1mws1NWEaLrSH5BlaIRLkvFDkbom5TKtBRLoDPOBSzRs8rbXaB
        ItiMLEM2ZHWSLnKjbEWt8b2BpsMU7YwJT0KUK3/qfOtq0+zDVASypFTtAZ4p
        u6Lzy/GyTe9TgbDT6jitbts57B22W4ddq2W1S1cQyY0+xFhuJwVNskDZwofo
        V18dKKKNnWmi1sFI7ZCcxL4K+xzAp1rPl9M23e9m+0qyb8/1banqOwZMBFro
        cijjGC5N8j1Rxoh86eTHKL4K5DzfOeHq/+6aV4NC7kF0TGNRbjV9VLmv/As9
        kd6gsgsAAA==
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:27 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:27 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:27 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=APVwrcJYKQ__ZivGiRa26QquZDN8iWkWOsSTW4WchXZtMVL0b_LfO-RJ4zJe5Fzsmbzwan26hSd3f9gICscjJm2TaIt7842ODGW-xg16Z0ZWU87zGom9F5RAVFh1j4TP;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:27 GMT;HttpOnly
      - NID=67=QJiZrsUiu88WUIWfieIFiX3KrkAaPEA4zWSlZ9NunD_x3kr1CSAxU83nhWkiRxqtboMe4kXBA3eT_nZlBvHZhw4BxBHh8yvBDGhxK2-YSiw9HO77n-dD5KQbtKJ07bc6;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:27 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyVXU/bMBSG/0okpOViIk7ahNDghnV8CTSQWiiM3UwmcZMM
        Jw62Q4FfPydZP6Cio1WFkqpXkX18znlf23kM959iojxixiOatFVD01UFJx71
        oyRoq/2r4+1ddd+FA4x9Ra5MeFsNhUgdAIbDoTZsapQFoKHrFugIGqvlGoem
        OLnEiHnheDlqaR6NwTbgKfZAvoAXC4ChGWCUF0zKcy/EMeJaQGlAcJHLU4aR
        z0OMBc977ozT/HlppT5VCXwHCyRd3YAvDxkVewf97lG3ye3BpbBP407rZ693
        d9zvamVUdWHku3lZnted6j1dPN8YDoaU3f/TpXceD//EdtYYdIPf/snZj24S
        Ppz3z8jt1cXL5UnY9I5b1sVNj3T7RyBl0SMSGAwyQiCQ7WCW+nLCdxu6YW3r
        5rbeujIsp7HrNBqapVu/IBitgJ78BJQ9K4VnvODOCczihVK2xiZV4EIRCYLd
        JIvv5NUxICjHkETJvcIwaauIyA6JlChbPadSncBPAoQiJqoSMjwoe8/bWs/z
        9u/xc3uRHc2lTTT8705s5ac30ofSlERyT+V/AJC8y1+fPi51dbdgQQMp5aLK
        Bjgmg+rpQ5kIKXNhgmLsMkrZXYBjCIohlDsdkfHstyAf5hogKCMQjNInlHME
        FYj0MM+I4K4FwXuh6RwuEBOniY+fXONVxlQA4kTIP3yMrhJN19edwWFo3Z5E
        Obi+pzf6+SdCi/o7C7NKnr2D/UiMXhFHTrzzkthAxtQ5RSe1KsHAK3SHCcET
        Bno0EfLY5tz6vSJUwocz76PXn0RcLHxUS9Fl1rgnPfLV4rIo+Tl+HiOeIRK9
        lHKlod2tV1OdNFqFL/Gw8IP1BcXpXlGpLc1VHZ5gRmP+I1ZTY8AdRocHNEuE
        a+xCMD3Ogx4l5cAuYuOh5HzO3HfQe3s4ZPj59FNxa29wO8HthXykFTpQLvNp
        pVFN6tprRt3l/NSEunYNqGvXgLr2DHXNOdS1qk5dc0PdCXUL2jarCVtzzWC7
        nJ+awNasAWzNGsDWnIGtPg+2zarT1trQ9g1tzWrS1loz2i7npya0tWpAW6sG
        tLUWo23VYYs2sH0DW6uasEVrBtvl/NQEtqgGsEU1gC1aCWwLTe5fAAAA//8D
        ADL31UvfIAAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:27 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:28 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:28 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=KcJwyQB-erAzhhQCiUBwhk3j9pxG2V0AjmdjkVr2GKUx9jl3HilwJi0E6jET57YkNyg9GA_UxV0SGfftvGKlKdTlFSJdNh8jx-NeodjOnU2HHeQNn3bg21Hq_pA2Ab9Z;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:28 GMT;HttpOnly
      - NID=67=k5P6zl5SRf-La4S6oyiNnM-8Qw2DAxxHd8s1Vwtp-aU1TfRhXe6OUJrVxBzPyv3ZfnKtWntudHuY2Y8WIp6rixhdPWuQ3t83Vwj0gkmFX2ghZWI4FCJIqPJ9IJLQvGKo;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:28 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOycDW+iSBiA/4rJJsddLhVmnEHxqHtWpd3e2V38bHvZXFiY
        KlcEV8atvV9/gKJWhp5kd1knIWlikQ+HGR+QZ973Vd+uZk7pC1n4tueeC6As
        CSXimp5lu5NzYTjQzmrC24b6QIhVCrZ0/XNhSum8LopPT0/lp0rZW0xEKElY
        bFJvJqy3qXtz4vaJsTCn280NpWx6M/FM9OfEFMMN/GgDEZSBGO/3yaB7u/jm
        lMwMvzzxvIlDot0nlkENMdos3mfiv7aDP18Qw/KnhFA/bKe83c169XOicxJK
        E6tOqBH0xFj86fPSo7+1hnpHr/jVhz6tvps1ldte75M21MvrtUJDta1GeFg/
        PO7eZ+8fPOxMXzSJ4/ii1PzS/mdWXcIHffK3dXn9p+5OP3eH187d4Obf/uW0
        YmoKvhn3HH3YET1LFucL+4tBifiwdBxVDD5NXc6DTiFWA0oAn0noTFIGANdh
        rQ5hGUv4XhXjLVQzeJl4i+dSdMokY8dRsphl2uVNeI6C2FCpTR3SGBifgmUC
        VHG9rDq2+1haEOdcMJzg4G7QuuBTnudBwyhZUXFKZ45Qmi7Iw/pjX+tU0zTf
        PpLn8ywdGjZt14b/+za8Ccctbp8xnzt20J0BNaIRfPN/XR3f1G82/hnbP/d8
        ynP7N9if0AlsrkQvTsMnzsNJNTJsnrGkU2/RUF1jRhoLz1t8mpCZKkaLatDd
        trN99/dJuBg2QRXXa1Qx3n13Xa9TjxpOj/hLh/oNBFUxbd3+Tj41FvSda5FV
        A7zYY2+FOvHrC++p5S1d2gA1VdxfDleanrNeqEbrtosqcWlwadtesteX5Pbm
        Qp3bBboHWiDzhTn4otSJZdP4LlsP3ki501bFYJ3wykF3x/rRF/zm7lJvei4l
        4YCqYvzvKTMTjeJLrsMuPc02hhAEhysFlAS/4IRSQET0arvzJR0ZzpJEi+5y
        Rha2Gb8R/NILR2OzcwB5hE8KRQFBoCN5mmbTap4kwYKkiJ+LJEmQH5IgByTB
        VJLgS5LgIUkwJAkeT9LFrLNq6uOcSaoUJEX8tJIkVfghqcIBSZVUkiovSaoc
        klQJSapkIAl1tNFo+JwvSaggKeKnnSQJ8UMS4oAklEoSekkSOiQJhSShY0m6
        awPj9um+1wlIejcp5yezgnPEBU0RQx3Gs5LED06YA5xwKk74JU7n/WH3517r
        rzP0sR6+gI+/JB6fpOj5SToeMenmFnRHV638EZMLxCKwNMZDFEeIyRwgJqci
        JqcghlMRgxFi8GjEyPP15IO++uPy2c8RL1jYvtj2wQRemBe6IAe2DzJsH2Tb
        PnzIEg5RwhmerOh49HQ/7Of5ZAUL2xfbviRJMj8knb7tgwzbB9m2Tz4kSQ5J
        kjOQ5I6H3lU/V9sHC9sX274kSVV+SDp92wcZtg+ybV/1kKRqSFI1A0l43Gv2
        9FxtHyxsX2z7kiTV+CHp9G0fZNg+yLZ9tUOSaiFJtUy276I56ueuImBh+2Lb
        l6RJ4Yem05d9kCH7IFv2KYc0KSFNSgax917TlQ8XP4CmQuxtxF6SJkp8yg9Q
        p6/2IEPtQbbaC7te2AzA0Qxd3WrdfsfOn6FqwVBEzmWSIcBNsF4wjBwQVE0l
        qHoQrJeM1luH6x0drxe68Pea1tP6ebpwVLjw2IUjjmdzEQcyHDFkOEoJfZW+
        dvI28uFOtzXI1T2gwofHPpxBEzf3JsSBEEcMIY7YQvzr702RE39sdkP/kCdN
        hRPfOHEGTdwEkyMOpDhiSHHEluIgEU0OonBykCWeHI+nVk/Pda4WFV489uIM
        mrgJKEcciHHEEOOILcZBIqIcRCHl4OiY8rs2sLQmvhrkbiJQ4cZjN84gipvA
        csSBHEcMOY7YchwkIstBFFoOMsSW6+TWsW7yD3zFhY2IbQROBr4CEQR/iszN
        cxTmwEpghpXAbCuxG4BE3CuUpSjKaH+Mjk7TVToAXY9y/TEoF6DFoMnJiSiD
        GrwgJnOAmMxATGYjFna9sBmAI29Wl+bDcKLftfp536xqhZ6I9UQtydDU9m3f
        5CbeqMaBpKgxJEWNLSni7hf2BuJonjqavhoPcv/xpxSCIhYUSgpPFjcRRwoH
        mkJhaAqFrSni7hf2BuJInq6k7mh0f32R+/0JFFWNdlWNknmE64E0+JmVAlzU
        N2IWOEqpcLQdAmF/NI4PlzAmWndo5xkuAYrcwR1TyfAjxA9MPKQPAlb+IEhJ
        IEQJK4GiWV6UZZaXtlf6MF8VAYokwl3JMAZS3MzzAh7yCAErkRCkZBKixFQv
        iqZ6UZapXrfdeWwN8i0dVmQT7mqHMZDiZrIX8JBQCFgZhSAlpRAl5ntRNN+L
        stQQw+2LWreXbw2xIq1wV0SMgRQ3s72Ah8xCwEotBCm5hShZSmxdSyxLMTFL
        nw77vfwrHRX5hbtqYgysuKnGAnhIMQSsHEOQkmSIEhVZUFSSBR1dkyVUFPfT
        R3KRa3UjUARR7BRFMoqCI0XBQ/gEYMVPgJQAim+jKJqS+T7noua4UBRbRcFA
        ih9FgXlQFJilKPD3VBRNrXmfc3VzXCiKraJgIMWPosA8KArMUhT4eyqKZgdd
        5VzmHBeKYqsoGEjxoyjwEYriPwAAAP//7J3RboIwFIZfhbtebVKxtXKxxE0g
        msxFnWR65wIq2+ISjXPx6Vd1oNjD0htxJynhAQo/H5Qvp6f/ZZAwUhdRFM/U
        H3jll1EwoygyRQFghUdRMAyKgkGKgl1KUYyCUXf43Q7vy99GwJSgHzWFWoMe
        J4v1IvpK4uU2maEhDEM1OoXK0WlBPXouBnKeii5jduCHfn9wDcaMt0i9hcrY
        dhMnKCFD4DA45DA47DDyORAlF90Z4qc/7M2D8tcBy4s1LiN1GSpm0RIpZgi8
        Boe8Boe9Rj4HouSi+zVrt70effDL/xHjxm9kfkPFbJcjSswQuA4OuQ4Ou458
        DkTJRRezKH5pdibBNSaNxnekvkPFbLqOF1OUnCGQHxySHxyWH2dBEDUZ3QVa
        ohs252Ov/OInYRRIpkDUJcQOrdhsfx1oIBMY/IeA/IeA/ccxA2Xj30bVOWz+
        exKTLnGrqbfpj68whRRGiGRCRCUuSuKVNZevT2vysbJacnw3T69v8Tuatuy7
        fDEACLgRAbuRwkjIX2npGpPZox/6vVb5c0zTO+NoTFQOabUiTzn6mkWrrjxt
        NI2oKYZGGhTqpEELWmkAYahVjA3B5JMlnN+DwBHq/vp1xuGm4ZXf0UbeF2NY
        UsMCYOm4Ne7iaby7ixMDi4BbEUXdQg8JnANo37K6U2fkJCKFtf2g734AAAD/
        /wMAPN/SBj2TAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:28 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:46:15 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:15 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '120720'
      Server:
      - GSE
      Age:
      - '13'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.5
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20150326",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:28 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:41:29 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:29 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"28i-YUCcAhcv4gf_YBu5QxambJ8/MTQyODU5MzMwMjUwNQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMVWW2/aSBR+51cgr8RTwMbgcJFQl1waJYppSCBV2q7Q4Dm2
        p9ged2YMOFX++86MHUJI0iQrdYssEGfO5TvfnIt/VqrGgiTY6FcNzMgS/vJJ
        BMaeFBMttIbLo+9xJ7P9cTDDJ2fn4yT84U7PopvJ6PbqJGx5H3vO6PNlNJ4e
        azMQKFCG3wy7S+o300NvGHrLduDPbg4yZ7xG8fysa7qTcf7paOq4t+7K/T5d
        jcbfDG3OIfLPSbJQLkIhUt43zdVq1QgoDSJAKeENj8amxmoubVPB5ea7UaJI
        AEuQgN1YmHq8DKYD8ZQBwjwEEKbneR8WkA/eE62W8XSg0XK8KAiK54B/e1ia
        iTQTg1DEUc0LGY1h4KOIQ21FcABiIFhWXrNHk100nEeNgAskiFewLdGpr4hw
        YZIYBZJyZTdrNmdbSGfqvJEmgXYswiyeJ4hEr+XqA2BuLsWHAGtYNYLfl+ty
        YNX4YOgCHiV0qD7XV8jJJ/jadT+fw+TKPzph6dStnyan0EqycFLjtwNu21YB
        lAhZ8hJgIgED400tjUkMkzzVByhNI+JJOmhiLhNcgq9LMW9s5a/tIjSHiEur
        n5WqLGeBGAPVSZr9PSULCcaQPBIJhqSHx2oMuGDEEzviJYGVFimqKtU7FdOT
        EKTekfxScG2r6dStVr3VnFidftvpW92G07a/FHlRTHyyq9yuW71J0+nb3b5t
        NxzLeax8kLvwJoMIcXGtEb5k0uo7Pfk0mlanjIHYAvBTo2avY9WtpnwmltXX
        T8OyrMJoKe9J3obS6xa3mCIGiVDEf5U0KfJ3J1uhcQk+yF9PV3/1YcxdPNTb
        dNG7uB6W579/IJkldPNlEIXGf4HxkkfCLykVmzKq3lWq/+jptE4p05E2Nbxd
        /Sn2X29lTFdJRBHenmLcPNae3z/JCkQfKYuRGKj4e7ug1nXVlBRxSQJNIZGo
        sljy9ag3/yRqivlT1BqzRLuOI1+r8Tr1feLBc/DjqPHn01hHfG2UIyfjwC6A
        xYSXfahLZafhHs519m97NZgdh237ALnTQ76K99PW7Lpt5WM+o+Pj4h3hvmfj
        ooX/lw7dZMLN+7CMFltD8g2sEIlyXyhy7on6kVGBDnIBfMqhmDV6XmmzEYrh
        fmQZsiGrl9k8N8pW1Bq/Gmg6TNHOmPA0Qrnyp843ru6bfZiJUJaUqj3AU2VX
        dH45XjbpnRYIO62O0+q2nf3efru137VaVrt0BbHc6EOM5XZS0CQLlM0DiP8O
        1IEi2tiaJmoduGqH5CQJVNjnAD7Ver6cNun+MttXkn17rm9LVd8xYCLQXJdD
        GcfwaJrviFaMyJdOfoiSq1DO860Trv5vr3k1KOQeRIc0EeVW00eVu8q/+rIc
        PLILAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:29 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:29 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:29 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=AfsjFcs1H_1tvIkJBgbQw6kGOYz928xifmeitA1nEAobi3oZZKo98dc6v3e6fV4rjQ_RGsFPiOxb_VxT5KZV5TsX_Dx2N1k2OArC2qaISMFYqVVzlFgyu_YfcxRKa9Oc;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:29 GMT;HttpOnly
      - NID=67=nSJ83XLS02kzBH9SBFLdVRCIAx0J0iRiQIf0IVMmlScCgyARmvoOuZdwE5Ldq689oJViK1pX1EQg1b-0q-K58WxvYQBm33a0XXK1mAkCYJ9AJQENwyocilKnE6c2ZQmv;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:29 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyVXU/bMBSG/0okpOViIk7ahNDghnV8CTSQWiiM3UwmcZMM
        Jw62Q4FfPydZP6Cio1WFkqpXkX18znlf23kM959iojxixiOatFVD01UFJx71
        oyRoq/2r4+1ddd+FA4x9Ra5MeFsNhUgdAIbDoTZsapQFoKHrFugIGqvlGoem
        OLnEiHnheDlqaR6NwTbgKfZAvoAXC4ChGWCUF0zKcy/EMeJaQGlAcJHLU4aR
        z0OMBc977ozT/HlppT5VCXwHCyRd3YAvDxkVewf97lG3ye3BpbBP407rZ693
        d9zvamVUdWHku3lZnted6j1dPN8YDoaU3f/TpXceD//EdtYYdIPf/snZj24S
        Ppz3z8jt1cXL5UnY9I5b1sVNj3T7RyBl0SMSGAwyQiCQ7WCW+nLCdxu6YW3r
        5rbeujIsp7HrNBqapVu/IBitgJ78BJQ9K4VnvODOCczihVK2xiZV4EIRCYLd
        JIvv5NUxICjHkETJvcIwaauIyA6JlChbPadSncBPAoQiJqoSMjwoe8/bWs/z
        9u/xc3uRHc2lTTT8705s5ac30ofSlERyT+V/AJC8y1+fPi51dbdgQQMp5aLK
        Bjgmg+rpQ5kIKXNhgmLsMkrZXYBjCIohlDsdkfHstyAf5hogKCMQjNInlHME
        FYj0MM+I4K4FwXuh6RwuEBOniY+fXONVxlQA4kTIP3yMrhJN19edwWFo3Z5E
        Obi+pzf6+SdCi/o7C7NKnr2D/UiMXhFHTrzzkthAxtQ5RSe1KsHAK3SHCcET
        Bno0EfLY5tz6vSJUwocz76PXn0RcLHxUS9Fl1rgnPfLV4rIo+Tl+HiOeIRK9
        lHKlod2tV1OdNFqFL/Gw8IP1BcXpXlGpLc1VHZ5gRmP+I1ZTY8AdRocHNEuE
        a+xCMD3Ogx4l5cAuYuOh5HzO3HfQe3s4ZPj59FNxa29wO8HthXykFTpQLvNp
        pVFN6tprRt3l/NSEunYNqGvXgLr2DHXNOdS1qk5dc0PdCXUL2jarCVtzzWC7
        nJ+awNasAWzNGsDWnIGtPg+2zarT1trQ9g1tzWrS1loz2i7npya0tWpAW6sG
        tLUWo23VYYs2sH0DW6uasEVrBtvl/NQEtqgGsEU1gC1aCWwLTe5fAAAA//8D
        ADL31UvfIAAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:29 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:30 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:30 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=PTFOzRY773fFD4qpcf0FMeb9HhxzDbX2YPSF3M30gLs_Cmu_a96901XFUaNE_mh9KnkcITXn_Nd0I8GpzUOL0cT-k-bP51fxVrVaNcGHDt9dXVDDYxCgzVbsHvRd-t_R;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:30 GMT;HttpOnly
      - NID=67=mXx7ybxD2ITicl51UBk-rQA99mhchlkT4WWwOIxlXzJ4DTWvmqVc87NceNkv5-QH6N8CG0cBNgIgIoM8HHrzyHGIogmRJXh5C_NxZ7xeZ7qLNbO4nZBAfK4CPmXMDEeH;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:30 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOycDW+iSBiA/4rJJsddLhVmnEHxqHtWpd3e2V38bHvZXFiY
        KlcEV8atvV9/gKJWhp5kd1knIWlikQ+HGR+QZ973Vd+uZk7pC1n4tueeC6As
        CSXimp5lu5NzYTjQzmrC24b6QIhVCrZ0/XNhSum8LopPT0/lp0rZW0xEKElY
        bFJvJqy3qXtz4vaJsTCn280NpWx6M/FM9OfEFMMN/GgDEZSBGO/3yaB7u/jm
        lMwMvzzxvIlDot0nlkENMdos3mfiv7aDP18Qw/KnhFA/bKe83c169XOicxJK
        E6tOqBH0xFj86fPSo7+1hnpHr/jVhz6tvps1ldte75M21MvrtUJDta1GeFg/
        PO7eZ+8fPOxMXzSJ4/ii1PzS/mdWXcIHffK3dXn9p+5OP3eH187d4Obf/uW0
        YmoKvhn3HH3YET1LFucL+4tBifiwdBxVDD5NXc6DTiFWA0oAn0noTFIGANdh
        rQ5hGUv4XhXjLVQzeJl4i+dSdMokY8dRsphl2uVNeI6C2FCpTR3SGBifgmUC
        VHG9rDq2+1haEOdcMJzg4G7QuuBTnudBwyhZUXFKZ45Qmi7Iw/pjX+tU0zTf
        PpLn8ywdGjZt14b/+za8Ccctbp8xnzt20J0BNaIRfPN/XR3f1G82/hnbP/d8
        ynP7N9if0AlsrkQvTsMnzsNJNTJsnrGkU2/RUF1jRhoLz1t8mpCZKkaLatDd
        trN99/dJuBg2QRXXa1Qx3n13Xa9TjxpOj/hLh/oNBFUxbd3+Tj41FvSda5FV
        A7zYY2+FOvHrC++p5S1d2gA1VdxfDleanrNeqEbrtosqcWlwadtesteX5Pbm
        Qp3bBboHWiDzhTn4otSJZdP4LlsP3ki501bFYJ3wykF3x/rRF/zm7lJvei4l
        4YCqYvzvKTMTjeJLrsMuPc02hhAEhysFlAS/4IRSQET0arvzJR0ZzpJEi+5y
        Rha2Gb8R/NILR2OzcwB5hE8KRQFBoCN5mmbTap4kwYKkiJ+LJEmQH5IgByTB
        VJLgS5LgIUkwJAkeT9LFrLNq6uOcSaoUJEX8tJIkVfghqcIBSZVUkiovSaoc
        klQJSapkIAl1tNFo+JwvSaggKeKnnSQJ8UMS4oAklEoSekkSOiQJhSShY0m6
        awPj9um+1wlIejcp5yezgnPEBU0RQx3Gs5LED06YA5xwKk74JU7n/WH3517r
        rzP0sR6+gI+/JB6fpOj5SToeMenmFnRHV638EZMLxCKwNMZDFEeIyRwgJqci
        JqcghlMRgxFi8GjEyPP15IO++uPy2c8RL1jYvtj2wQRemBe6IAe2DzJsH2Tb
        PnzIEg5RwhmerOh49HQ/7Of5ZAUL2xfbviRJMj8knb7tgwzbB9m2Tz4kSQ5J
        kjOQ5I6H3lU/V9sHC9sX274kSVV+SDp92wcZtg+ybV/1kKRqSFI1A0l43Gv2
        9FxtHyxsX2z7kiTV+CHp9G0fZNg+yLZ9tUOSaiFJtUy276I56ueuImBh+2Lb
        l6RJ4Yem05d9kCH7IFv2KYc0KSFNSgax917TlQ8XP4CmQuxtxF6SJkp8yg9Q
        p6/2IEPtQbbaC7te2AzA0Qxd3WrdfsfOn6FqwVBEzmWSIcBNsF4wjBwQVE0l
        qHoQrJeM1luH6x0drxe68Pea1tP6ebpwVLjw2IUjjmdzEQcyHDFkOEoJfZW+
        dvI28uFOtzXI1T2gwofHPpxBEzf3JsSBEEcMIY7YQvzr702RE39sdkP/kCdN
        hRPfOHEGTdwEkyMOpDhiSHHEluIgEU0OonBykCWeHI+nVk/Pda4WFV489uIM
        mrgJKEcciHHEEOOILcZBIqIcRCHl4OiY8rs2sLQmvhrkbiJQ4cZjN84gipvA
        csSBHEcMOY7YchwkIstBFFoOMsSW6+TWsW7yD3zFhY2IbQROBr4CEQR/iszN
        cxTmwEpghpXAbCuxG4BE3CuUpSjKaH+Mjk7TVToAXY9y/TEoF6DFoMnJiSiD
        GrwgJnOAmMxATGYjFna9sBmAI29Wl+bDcKLftfp536xqhZ6I9UQtydDU9m3f
        5CbeqMaBpKgxJEWNLSni7hf2BuJonjqavhoPcv/xpxSCIhYUSgpPFjcRRwoH
        mkJhaAqFrSni7hf2BuJInq6k7mh0f32R+/0JFFWNdlWNknmE64E0+JmVAlzU
        N2IWOEqpcLQdAmF/NI4PlzAmWndo5xkuAYrcwR1TyfAjxA9MPKQPAlb+IEhJ
        IEQJK4GiWV6UZZaXtlf6MF8VAYokwl3JMAZS3MzzAh7yCAErkRCkZBKixFQv
        iqZ6UZapXrfdeWwN8i0dVmQT7mqHMZDiZrIX8JBQCFgZhSAlpRAl5ntRNN+L
        stQQw+2LWreXbw2xIq1wV0SMgRQ3s72Ah8xCwEotBCm5hShZSmxdSyxLMTFL
        nw77vfwrHRX5hbtqYgysuKnGAnhIMQSsHEOQkmSIEhVZUFSSBR1dkyVUFPfT
        R3KRa3UjUARR7BRFMoqCI0XBQ/gEYMVPgJQAim+jKJqS+T7noua4UBRbRcFA
        ih9FgXlQFJilKPD3VBRNrXmfc3VzXCiKraJgIMWPosA8KArMUhT4eyqKZgdd
        5VzmHBeKYqsoGEjxoyjwEYriPwAAAP//7J3RboIwFIZfhbtebVKxtXKxxE0g
        msxFnWR65wIq2+ISjXPx6Vd1oNjD0htxJynhAQo/H5Qvp6f/ZZAwUhdRFM/U
        H3jll1EwoygyRQFghUdRMAyKgkGKgl1KUYyCUXf43Q7vy99GwJSgHzWFWoMe
        J4v1IvpK4uU2maEhDEM1OoXK0WlBPXouBnKeii5jduCHfn9wDcaMt0i9hcrY
        dhMnKCFD4DA45DA47DDyORAlF90Z4qc/7M2D8tcBy4s1LiN1GSpm0RIpZgi8
        Boe8Boe9Rj4HouSi+zVrt70effDL/xHjxm9kfkPFbJcjSswQuA4OuQ4Ou458
        DkTJRRezKH5pdibBNSaNxnekvkPFbLqOF1OUnCGQHxySHxyWH2dBEDUZ3QVa
        ohs252Ov/OInYRRIpkDUJcQOrdhsfx1oIBMY/IeA/IeA/ccxA2Xj30bVOWz+
        exKTLnGrqbfpj68whRRGiGRCRCUuSuKVNZevT2vysbJacnw3T69v8Tuatuy7
        fDEACLgRAbuRwkjIX2npGpPZox/6vVb5c0zTO+NoTFQOabUiTzn6mkWrrjxt
        NI2oKYZGGhTqpEELWmkAYahVjA3B5JMlnN+DwBHq/vp1xuGm4ZXf0UbeF2NY
        UsMCYOm4Ne7iaby7ixMDi4BbEUXdQg8JnANo37K6U2fkJCKFtf2g734AAAD/
        /wMAPN/SBj2TAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:30 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:46:15 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:15 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '120720'
      Server:
      - GSE
      Age:
      - '15'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.5
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20150326",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:31 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:41:31 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:31 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"28i-YUCcAhcv4gf_YBu5QxambJ8/MTQyODU5MzMwMjUwNQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMVWW2/aSBR+51cgr8RTwMbgcJFQl1waNRvSQCBVdrtCg+fY
        nmJ7nJkxxqny3zszdgghSZOs1C2yQJw5l+98cy7+XqkaSxJjo181MCMr+MMj
        IRh7Uky00Bqujr5FndT2xv4cn5yejePgZjQ7Da+n57eXJ0HL/dhzzr9MwvHs
        WJuBQL4y/GrYXVK/nh26w8BdtX1vfn2QOuM1ihanXXM0Heefj2bO6HaUjb7N
        svPxV0Obcwi9MxIvlYtAiIT3TTPLsoZPqR8CSghvuDQyNVZzZZsKLjffjRKF
        AliMBOzGwtTlZTAdiCcMEOYBgDBd1/2whHzwnmi1lCcDjZbjZUFQtAD8y8PS
        VCSpGAQiCmtuwGgEAw+FHGoZwT6IgWBpec0ujXfRcB42fC6QIG7BtkSnvkLC
        hUki5EvKld282ZxvIZ2r80YS+9qxCNJoESMSvparB4C5uRIffKxh1Qh+X66r
        gVXjg+EI8HlMh+pzdYmc/Jb3yPCvy3jCzj5NPpPFop110ilvjm5Oavx2wG3b
        KoASIUteAowlYGC8qaURiWCaJ/oAJUlIXEkHjc1VjEvwdSnmja38tV2IFhBy
        afW9UpXlLBBjoDpJs7+nZAHBGOJHIsGQ9PBYjQEXjLhiR7wikGmRoqpSvVMx
        XQlB6h3JLwXXtppO3WrVW82p1em3nb7VbTht++8iL4qJR3aV23WrN206fbvb
        t+2GYzmPlQ/yEbzJIERcXGmEL5m0+k5PPo2m1SljILYE/NSo2etYdaspn6ll
        9fXTsCyrMFrJe5K3ofS6xS0miEEsFPH/SJoU+buTrdCYgAfy19XVX30YcxcP
        9TZb9i6uhuX5rx9IZgndfBlEofFfYLzkkfAJpWJTRtW7SvVfPZ3WCWU60qaG
        t6s/wd7rrYxpFocU4e0pxs1j7fn9k6xA9JGyCImBir+3C2pdV01JEZck0ARi
        iSqNJF+PevN3oqaYP0WtMUu06yj0tBqvU88jLjwHPwobvz+NdcjXRjlyUg7s
        AlhEeNmHulR2Gu7hXGf/tleD+XHQtg/QaHbIs2g/ac2v2lY+5nM6Pi7eEe57
        Nipa+H/p0E0m3LwPy2ixNSTfwAqRKPeFIueeqJuUCnSQC+AzDsWs0fNKm52j
        CO5HliEbsjpJF7lRtqLW+NlA02GKdsaEJyHKlT91vnF13+zDVASypFTtAZ4p
        u6Lzy/GySe9TgbDT6jitbtvZ7+23W/tdq2W1S1cQyY0+xFhuJwVNskDZwofo
        T18dKKKNrWmi1sFI7ZCcxL4K+xzAp1rPl9Mm3Z9m+0qyb8/1banqOwZMBFro
        cijjGC5N8h1Rxoh86eSHKL4M5DzfOuHq//aaV4NC7kF0SGNRbjV9VLmr/AC7
        LxqusgsAAA==
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:31 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:32 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:32 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=PFFSHH-BGgSXN91Q2tJG3NmG035k6hkNv967dh4i2eqKnEGbHKTf61s_xG-pc5-fYABWcP5f3h-atGffkq3DvSqjSrei9NeopOHixLo7zMf1ZisM63s1mqM9HNK9-ybd;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:32 GMT;HttpOnly
      - NID=67=emII7yliYyzVmIXe7Ox-vFYhRIPXFCvChTo8AWJaKQ6O4g5znOSXsmKZ4wfFCbB8uVDzcCfrQbmErX64-73CL0jl140AWgsLlH45RfQOdTy8m-DKYL-1YM_k6roCUtzu;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:32 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyVXU/bMBSG/0okpOViIk7ahNDghnV8CTSQWiiM3UwmcZMM
        Jw62Q4FfPydZP6Cio1WFkqpXkX18znlf23kM959iojxixiOatFVD01UFJx71
        oyRoq/2r4+1ddd+FA4x9Ra5MeFsNhUgdAIbDoTZsapQFoKHrFugIGqvlGoem
        OLnEiHnheDlqaR6NwTbgKfZAvoAXC4ChGWCUF0zKcy/EMeJaQGlAcJHLU4aR
        z0OMBc977ozT/HlppT5VCXwHCyRd3YAvDxkVewf97lG3ye3BpbBP407rZ693
        d9zvamVUdWHku3lZnted6j1dPN8YDoaU3f/TpXceD//EdtYYdIPf/snZj24S
        Ppz3z8jt1cXL5UnY9I5b1sVNj3T7RyBl0SMSGAwyQiCQ7WCW+nLCdxu6YW3r
        5rbeujIsp7HrNBqapVu/IBitgJ78BJQ9K4VnvODOCczihVK2xiZV4EIRCYLd
        JIvv5NUxICjHkETJvcIwaauIyA6JlChbPadSncBPAoQiJqoSMjwoe8/bWs/z
        9u/xc3uRHc2lTTT8705s5ac30ofSlERyT+V/AJC8y1+fPi51dbdgQQMp5aLK
        Bjgmg+rpQ5kIKXNhgmLsMkrZXYBjCIohlDsdkfHstyAf5hogKCMQjNInlHME
        FYj0MM+I4K4FwXuh6RwuEBOniY+fXONVxlQA4kTIP3yMrhJN19edwWFo3Z5E
        Obi+pzf6+SdCi/o7C7NKnr2D/UiMXhFHTrzzkthAxtQ5RSe1KsHAK3SHCcET
        Bno0EfLY5tz6vSJUwocz76PXn0RcLHxUS9Fl1rgnPfLV4rIo+Tl+HiOeIRK9
        lHKlod2tV1OdNFqFL/Gw8IP1BcXpXlGpLc1VHZ5gRmP+I1ZTY8AdRocHNEuE
        a+xCMD3Ogx4l5cAuYuOh5HzO3HfQe3s4ZPj59FNxa29wO8HthXykFTpQLvNp
        pVFN6tprRt3l/NSEunYNqGvXgLr2DHXNOdS1qk5dc0PdCXUL2jarCVtzzWC7
        nJ+awNasAWzNGsDWnIGtPg+2zarT1trQ9g1tzWrS1loz2i7npya0tWpAW6sG
        tLUWo23VYYs2sH0DW6uasEVrBtvl/NQEtqgGsEU1gC1aCWwLTe5fAAAA//8D
        ADL31UvfIAAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:32 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:32 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:32 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=UaRWleUE55BBwYWddDSvMJCs4bWAs0D-WdhydfNBBkJSK4HbCr2Ixs8_8LmtGSD335CwpGPaBywczITvDYzakNN8BXEXNXirh6NQcB6rzWmKO6x9aE4C-fi6iHj_YEoL;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:32 GMT;HttpOnly
      - NID=67=gQSM7rTdI6HtnClL5d_zcUCx1rd5v_sC1vCelNX4yAgsc8ovkk-uwRlSuYxekRFsd2gRKF_9p22EIu8-90dMbTeJ41jJX_eHz1_hkqxYdmKg37dxnFj5FtwYJ0fQxCIu;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:32 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOycDW+iSBiA/4rJJsddLhVmnEHxqHtWpd3e2V38bHvZXFiY
        KlcEV8atvV9/gKJWhp5kd1knIWlikQ+HGR+QZ973Vd+uZk7pC1n4tueeC6As
        CSXimp5lu5NzYTjQzmrC24b6QIhVCrZ0/XNhSum8LopPT0/lp0rZW0xEKElY
        bFJvJqy3qXtz4vaJsTCn280NpWx6M/FM9OfEFMMN/GgDEZSBGO/3yaB7u/jm
        lMwMvzzxvIlDot0nlkENMdos3mfiv7aDP18Qw/KnhFA/bKe83c169XOicxJK
        E6tOqBH0xFj86fPSo7+1hnpHr/jVhz6tvps1ldte75M21MvrtUJDta1GeFg/
        PO7eZ+8fPOxMXzSJ4/ii1PzS/mdWXcIHffK3dXn9p+5OP3eH187d4Obf/uW0
        YmoKvhn3HH3YET1LFucL+4tBifiwdBxVDD5NXc6DTiFWA0oAn0noTFIGANdh
        rQ5hGUv4XhXjLVQzeJl4i+dSdMokY8dRsphl2uVNeI6C2FCpTR3SGBifgmUC
        VHG9rDq2+1haEOdcMJzg4G7QuuBTnudBwyhZUXFKZ45Qmi7Iw/pjX+tU0zTf
        PpLn8ywdGjZt14b/+za8Ccctbp8xnzt20J0BNaIRfPN/XR3f1G82/hnbP/d8
        ynP7N9if0AlsrkQvTsMnzsNJNTJsnrGkU2/RUF1jRhoLz1t8mpCZKkaLatDd
        trN99/dJuBg2QRXXa1Qx3n13Xa9TjxpOj/hLh/oNBFUxbd3+Tj41FvSda5FV
        A7zYY2+FOvHrC++p5S1d2gA1VdxfDleanrNeqEbrtosqcWlwadtesteX5Pbm
        Qp3bBboHWiDzhTn4otSJZdP4LlsP3ki501bFYJ3wykF3x/rRF/zm7lJvei4l
        4YCqYvzvKTMTjeJLrsMuPc02hhAEhysFlAS/4IRSQET0arvzJR0ZzpJEi+5y
        Rha2Gb8R/NILR2OzcwB5hE8KRQFBoCN5mmbTap4kwYKkiJ+LJEmQH5IgByTB
        VJLgS5LgIUkwJAkeT9LFrLNq6uOcSaoUJEX8tJIkVfghqcIBSZVUkiovSaoc
        klQJSapkIAl1tNFo+JwvSaggKeKnnSQJ8UMS4oAklEoSekkSOiQJhSShY0m6
        awPj9um+1wlIejcp5yezgnPEBU0RQx3Gs5LED06YA5xwKk74JU7n/WH3517r
        rzP0sR6+gI+/JB6fpOj5SToeMenmFnRHV638EZMLxCKwNMZDFEeIyRwgJqci
        JqcghlMRgxFi8GjEyPP15IO++uPy2c8RL1jYvtj2wQRemBe6IAe2DzJsH2Tb
        PnzIEg5RwhmerOh49HQ/7Of5ZAUL2xfbviRJMj8knb7tgwzbB9m2Tz4kSQ5J
        kjOQ5I6H3lU/V9sHC9sX274kSVV+SDp92wcZtg+ybV/1kKRqSFI1A0l43Gv2
        9FxtHyxsX2z7kiTV+CHp9G0fZNg+yLZ9tUOSaiFJtUy276I56ueuImBh+2Lb
        l6RJ4Yem05d9kCH7IFv2KYc0KSFNSgax917TlQ8XP4CmQuxtxF6SJkp8yg9Q
        p6/2IEPtQbbaC7te2AzA0Qxd3WrdfsfOn6FqwVBEzmWSIcBNsF4wjBwQVE0l
        qHoQrJeM1luH6x0drxe68Pea1tP6ebpwVLjw2IUjjmdzEQcyHDFkOEoJfZW+
        dvI28uFOtzXI1T2gwofHPpxBEzf3JsSBEEcMIY7YQvzr702RE39sdkP/kCdN
        hRPfOHEGTdwEkyMOpDhiSHHEluIgEU0OonBykCWeHI+nVk/Pda4WFV489uIM
        mrgJKEcciHHEEOOILcZBIqIcRCHl4OiY8rs2sLQmvhrkbiJQ4cZjN84gipvA
        csSBHEcMOY7YchwkIstBFFoOMsSW6+TWsW7yD3zFhY2IbQROBr4CEQR/iszN
        cxTmwEpghpXAbCuxG4BE3CuUpSjKaH+Mjk7TVToAXY9y/TEoF6DFoMnJiSiD
        GrwgJnOAmMxATGYjFna9sBmAI29Wl+bDcKLftfp536xqhZ6I9UQtydDU9m3f
        5CbeqMaBpKgxJEWNLSni7hf2BuJonjqavhoPcv/xpxSCIhYUSgpPFjcRRwoH
        mkJhaAqFrSni7hf2BuJInq6k7mh0f32R+/0JFFWNdlWNknmE64E0+JmVAlzU
        N2IWOEqpcLQdAmF/NI4PlzAmWndo5xkuAYrcwR1TyfAjxA9MPKQPAlb+IEhJ
        IEQJK4GiWV6UZZaXtlf6MF8VAYokwl3JMAZS3MzzAh7yCAErkRCkZBKixFQv
        iqZ6UZapXrfdeWwN8i0dVmQT7mqHMZDiZrIX8JBQCFgZhSAlpRAl5ntRNN+L
        stQQw+2LWreXbw2xIq1wV0SMgRQ3s72Ah8xCwEotBCm5hShZSmxdSyxLMTFL
        nw77vfwrHRX5hbtqYgysuKnGAnhIMQSsHEOQkmSIEhVZUFSSBR1dkyVUFPfT
        R3KRa3UjUARR7BRFMoqCI0XBQ/gEYMVPgJQAim+jKJqS+T7noua4UBRbRcFA
        ih9FgXlQFJilKPD3VBRNrXmfc3VzXCiKraJgIMWPosA8KArMUhT4eyqKZgdd
        5VzmHBeKYqsoGEjxoyjwEYriPwAAAP//7J3RboIwFIZfhbtebVKxtXKxxE0g
        msxFnWR65wIq2+ISjXPx6Vd1oNjD0htxJynhAQo/H5Qvp6f/ZZAwUhdRFM/U
        H3jll1EwoygyRQFghUdRMAyKgkGKgl1KUYyCUXf43Q7vy99GwJSgHzWFWoMe
        J4v1IvpK4uU2maEhDEM1OoXK0WlBPXouBnKeii5jduCHfn9wDcaMt0i9hcrY
        dhMnKCFD4DA45DA47DDyORAlF90Z4qc/7M2D8tcBy4s1LiN1GSpm0RIpZgi8
        Boe8Boe9Rj4HouSi+zVrt70effDL/xHjxm9kfkPFbJcjSswQuA4OuQ4Ou458
        DkTJRRezKH5pdibBNSaNxnekvkPFbLqOF1OUnCGQHxySHxyWH2dBEDUZ3QVa
        ohs252Ov/OInYRRIpkDUJcQOrdhsfx1oIBMY/IeA/IeA/ccxA2Xj30bVOWz+
        exKTLnGrqbfpj68whRRGiGRCRCUuSuKVNZevT2vysbJacnw3T69v8Tuatuy7
        fDEACLgRAbuRwkjIX2npGpPZox/6vVb5c0zTO+NoTFQOabUiTzn6mkWrrjxt
        NI2oKYZGGhTqpEELWmkAYahVjA3B5JMlnN+DwBHq/vp1xuGm4ZXf0UbeF2NY
        UsMCYOm4Ne7iaby7ixMDi4BbEUXdQg8JnANo37K6U2fkJCKFtf2g734AAAD/
        /wMAPN/SBj2TAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:32 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:46:15 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:15 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '120720'
      Server:
      - GSE
      Age:
      - '17'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.5
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20150326",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:33 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:41:33 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:33 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"28i-YUCcAhcv4gf_YBu5QxambJ8/MTQyODU5MzMwMjUwNQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMVWW2/iOBR+51egrMRTISEQbhKapbfZqUq3tNCZ7s4Kmfgk
        8RDHaewQ0lH/+9pOSiltp+1Ks4MiEMfn8p3P55LvlaqxJBE2BlUDJ2QFv3kk
        BGNPiokWWqPV4TfaTW1v4s/xx5PTSRTcjGcn4fX07PbyY9Byj/vO2eeLcDI7
        0mYgkK8Mvxp2j9SvZwfuKHBXbd+bX++nzmSN6OKkZ46nk/zPw5kzvh1n42+z
        7Gzy1dDmHELvlERL5SIQIuYD08yyrOEz5oeAYsIbLqOmxmqubFPB5ea7UaJQ
        QBIhAbuxMHN5GUwH4nECCPMAQJiu635YQj58T7RayuOhRsvxsiCILgD/9LAs
        FXEqhoGgYc0NEkZh6KGQQy0j2AcxFElaXrPLol00nIcNnwskiFuwLdGpr5Bw
        YRKKfEm5sps3m/MtpHN13ogjXzsWQUoXESLha7l6AJibK/HBxxpWjeD35boa
        WjU+HI0Bn0VspD5Xl8i5nWTHIb3swfWhk54sbvI/Tj/LeuvUO1++1PjtkNu2
        VQAlQpa8BBhJwJDwppZSQmGax/oAxXFIXEkHi8xVhEvwdSnmja38tV2IFhBy
        afW9UpXlLFCSgOokzf6ekgUEY4geiUSCpIfHaglwkRBX7IhXBDItUlRVqncq
        pishSL1D+aXg2lbTqVuteqs5tbqDtjOweg2nbf9V5MUw8ciucrtu9adNZ2D3
        BrbdcCznsfJ+PoY3GYSIiyuN8CWT1sDpy6fRtLplDJQsAT81ava7Vt1qymdq
        WQP9NCzLKoxW8p7kbSi9XnGLMUogEor4vyVNivzdyVZoXIAH8tfV1V99GHPn
        D/U2W/bPr0bl+c8fSGYJ3XwZRKHxX2C85JHwC8bEpoyqd5XqP3o6rWOW6Eib
        Gt6u/hh7r7cyZlkUMoS3pxg3j7Tn90+yAtExSygSQxV/bxfUuq6akiEuSWAx
        RBJVSiVfj3rzV6JmmD9FrTFLtGsaelqN15nnEReeg0/Dxq9PYx3ytVGOnJRD
        cg4JJbzsQ10qOw33cK6zf9urwfwoaNv7aDw74BntxK35VdvKJ3zOJkfFO8J9
        z9Kihf+XDt1kws37sAkrtobkG5JCJMp9oci5J+omZQLt5wL4jEMxa/S80mZn
        iML9yDJkQ1Yv0kVulK2oNX400HSYop0x4XGIcuVPnW9c3Tf7KBWBLClVe4Bn
        yq7o/HK8bNL7VCDstrpOq9d2Ov1Ou9XpWS2rXboCKjf6CGO5nRQ0yQJLFj7Q
        3311oIg2tqaJWgdjtUNyEvkq7HMAn2o9X06bdH+Y7SvJvj3Xt6Wq7xgwEWih
        y6GMY7gszndEWULkSyc/QNFlIOf51glX/7fXvBoUcg+iAxaJcqvpo8pd5V8X
        xysUsgsAAA==
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:33 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:34 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:34 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=PAVnIgTtMONZzAfRwHuJEOGag5obLqxt4aulCXZ5wxkdRpJS2RhaP6TwNJHfLlfuyhAMRSJvpT5YEOMLaNlm-5_V7YUkHN3trgF9XimktRc4cMaN38ei5el3w3xKfsKX;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:34 GMT;HttpOnly
      - NID=67=gQM1auqC3z285Ax8YfusjSM3IrIA4yL2TIJ13VSc89Itq1t5m2YPpFN0V3mzCI_OxPpOWwcy60JBcv4ujNUbHuhnDDyx6Oe4zN80L6PMGkdcIPg-qiWQmu8VBI3ufzWV;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:34 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyVXU/bMBSG/0okpOViIk7ahNDghnV8CTSQWiiM3UwmcZMM
        Jw62Q4FfPydZP6Cio1WFkqpXkX18znlf23kM959iojxixiOatFVD01UFJx71
        oyRoq/2r4+1ddd+FA4x9Ra5MeFsNhUgdAIbDoTZsapQFoKHrFugIGqvlGoem
        OLnEiHnheDlqaR6NwTbgKfZAvoAXC4ChGWCUF0zKcy/EMeJaQGlAcJHLU4aR
        z0OMBc977ozT/HlppT5VCXwHCyRd3YAvDxkVewf97lG3ye3BpbBP407rZ693
        d9zvamVUdWHku3lZnted6j1dPN8YDoaU3f/TpXceD//EdtYYdIPf/snZj24S
        Ppz3z8jt1cXL5UnY9I5b1sVNj3T7RyBl0SMSGAwyQiCQ7WCW+nLCdxu6YW3r
        5rbeujIsp7HrNBqapVu/IBitgJ78BJQ9K4VnvODOCczihVK2xiZV4EIRCYLd
        JIvv5NUxICjHkETJvcIwaauIyA6JlChbPadSncBPAoQiJqoSMjwoe8/bWs/z
        9u/xc3uRHc2lTTT8705s5ac30ofSlERyT+V/AJC8y1+fPi51dbdgQQMp5aLK
        Bjgmg+rpQ5kIKXNhgmLsMkrZXYBjCIohlDsdkfHstyAf5hogKCMQjNInlHME
        FYj0MM+I4K4FwXuh6RwuEBOniY+fXONVxlQA4kTIP3yMrhJN19edwWFo3Z5E
        Obi+pzf6+SdCi/o7C7NKnr2D/UiMXhFHTrzzkthAxtQ5RSe1KsHAK3SHCcET
        Bno0EfLY5tz6vSJUwocz76PXn0RcLHxUS9Fl1rgnPfLV4rIo+Tl+HiOeIRK9
        lHKlod2tV1OdNFqFL/Gw8IP1BcXpXlGpLc1VHZ5gRmP+I1ZTY8AdRocHNEuE
        a+xCMD3Ogx4l5cAuYuOh5HzO3HfQe3s4ZPj59FNxa29wO8HthXykFTpQLvNp
        pVFN6tprRt3l/NSEunYNqGvXgLr2DHXNOdS1qk5dc0PdCXUL2jarCVtzzWC7
        nJ+awNasAWzNGsDWnIGtPg+2zarT1trQ9g1tzWrS1loz2i7npya0tWpAW6sG
        tLUWo23VYYs2sH0DW6uasEVrBtvl/NQEtqgGsEU1gC1aCWwLTe5fAAAA//8D
        ADL31UvfIAAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:34 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:34 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:34 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=BTMCNIC1RH5LxUkyfofS6GHZY-443Ctp5Q5_RDsLbH_4c8Y0gCq4h_Q3_MrlPRal-rgxS_LVNDUcK_2KzoFrBTEbL7p90gWS-ZDzd3xtaVG4HhJEji8O5Uo3ZDspePrv;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:34 GMT;HttpOnly
      - NID=67=oPHaaz_yk24-6QarRTTAsq06mXyt2p7xZC1QJgibDD3yy1t5L6bUq1CYP5Y7EfxuRcqasbNlhk1kCJwt8-EPpv5hY3Ld7wnfcjNKZ8lSUq5G_jzHwgWeJq607r9KzPR_;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:34 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOycDW+iSBiA/4rJJsddLhVmnEHxqHtWpd3e2V38bHvZXFiY
        KlcEV8atvV9/gKJWhp5kd1knIWlikQ+HGR+QZ973Vd+uZk7pC1n4tueeC6As
        CSXimp5lu5NzYTjQzmrC24b6QIhVCrZ0/XNhSum8LopPT0/lp0rZW0xEKElY
        bFJvJqy3qXtz4vaJsTCn280NpWx6M/FM9OfEFMMN/GgDEZSBGO/3yaB7u/jm
        lMwMvzzxvIlDot0nlkENMdos3mfiv7aDP18Qw/KnhFA/bKe83c169XOicxJK
        E6tOqBH0xFj86fPSo7+1hnpHr/jVhz6tvps1ldte75M21MvrtUJDta1GeFg/
        PO7eZ+8fPOxMXzSJ4/ii1PzS/mdWXcIHffK3dXn9p+5OP3eH187d4Obf/uW0
        YmoKvhn3HH3YET1LFucL+4tBifiwdBxVDD5NXc6DTiFWA0oAn0noTFIGANdh
        rQ5hGUv4XhXjLVQzeJl4i+dSdMokY8dRsphl2uVNeI6C2FCpTR3SGBifgmUC
        VHG9rDq2+1haEOdcMJzg4G7QuuBTnudBwyhZUXFKZ45Qmi7Iw/pjX+tU0zTf
        PpLn8ywdGjZt14b/+za8Ccctbp8xnzt20J0BNaIRfPN/XR3f1G82/hnbP/d8
        ynP7N9if0AlsrkQvTsMnzsNJNTJsnrGkU2/RUF1jRhoLz1t8mpCZKkaLatDd
        trN99/dJuBg2QRXXa1Qx3n13Xa9TjxpOj/hLh/oNBFUxbd3+Tj41FvSda5FV
        A7zYY2+FOvHrC++p5S1d2gA1VdxfDleanrNeqEbrtosqcWlwadtesteX5Pbm
        Qp3bBboHWiDzhTn4otSJZdP4LlsP3ki501bFYJ3wykF3x/rRF/zm7lJvei4l
        4YCqYvzvKTMTjeJLrsMuPc02hhAEhysFlAS/4IRSQET0arvzJR0ZzpJEi+5y
        Rha2Gb8R/NILR2OzcwB5hE8KRQFBoCN5mmbTap4kwYKkiJ+LJEmQH5IgByTB
        VJLgS5LgIUkwJAkeT9LFrLNq6uOcSaoUJEX8tJIkVfghqcIBSZVUkiovSaoc
        klQJSapkIAl1tNFo+JwvSaggKeKnnSQJ8UMS4oAklEoSekkSOiQJhSShY0m6
        awPj9um+1wlIejcp5yezgnPEBU0RQx3Gs5LED06YA5xwKk74JU7n/WH3517r
        rzP0sR6+gI+/JB6fpOj5SToeMenmFnRHV638EZMLxCKwNMZDFEeIyRwgJqci
        JqcghlMRgxFi8GjEyPP15IO++uPy2c8RL1jYvtj2wQRemBe6IAe2DzJsH2Tb
        PnzIEg5RwhmerOh49HQ/7Of5ZAUL2xfbviRJMj8knb7tgwzbB9m2Tz4kSQ5J
        kjOQ5I6H3lU/V9sHC9sX274kSVV+SDp92wcZtg+ybV/1kKRqSFI1A0l43Gv2
        9FxtHyxsX2z7kiTV+CHp9G0fZNg+yLZ9tUOSaiFJtUy276I56ueuImBh+2Lb
        l6RJ4Yem05d9kCH7IFv2KYc0KSFNSgax917TlQ8XP4CmQuxtxF6SJkp8yg9Q
        p6/2IEPtQbbaC7te2AzA0Qxd3WrdfsfOn6FqwVBEzmWSIcBNsF4wjBwQVE0l
        qHoQrJeM1luH6x0drxe68Pea1tP6ebpwVLjw2IUjjmdzEQcyHDFkOEoJfZW+
        dvI28uFOtzXI1T2gwofHPpxBEzf3JsSBEEcMIY7YQvzr702RE39sdkP/kCdN
        hRPfOHEGTdwEkyMOpDhiSHHEluIgEU0OonBykCWeHI+nVk/Pda4WFV489uIM
        mrgJKEcciHHEEOOILcZBIqIcRCHl4OiY8rs2sLQmvhrkbiJQ4cZjN84gipvA
        csSBHEcMOY7YchwkIstBFFoOMsSW6+TWsW7yD3zFhY2IbQROBr4CEQR/iszN
        cxTmwEpghpXAbCuxG4BE3CuUpSjKaH+Mjk7TVToAXY9y/TEoF6DFoMnJiSiD
        GrwgJnOAmMxATGYjFna9sBmAI29Wl+bDcKLftfp536xqhZ6I9UQtydDU9m3f
        5CbeqMaBpKgxJEWNLSni7hf2BuJonjqavhoPcv/xpxSCIhYUSgpPFjcRRwoH
        mkJhaAqFrSni7hf2BuJInq6k7mh0f32R+/0JFFWNdlWNknmE64E0+JmVAlzU
        N2IWOEqpcLQdAmF/NI4PlzAmWndo5xkuAYrcwR1TyfAjxA9MPKQPAlb+IEhJ
        IEQJK4GiWV6UZZaXtlf6MF8VAYokwl3JMAZS3MzzAh7yCAErkRCkZBKixFQv
        iqZ6UZapXrfdeWwN8i0dVmQT7mqHMZDiZrIX8JBQCFgZhSAlpRAl5ntRNN+L
        stQQw+2LWreXbw2xIq1wV0SMgRQ3s72Ah8xCwEotBCm5hShZSmxdSyxLMTFL
        nw77vfwrHRX5hbtqYgysuKnGAnhIMQSsHEOQkmSIEhVZUFSSBR1dkyVUFPfT
        R3KRa3UjUARR7BRFMoqCI0XBQ/gEYMVPgJQAim+jKJqS+T7noua4UBRbRcFA
        ih9FgXlQFJilKPD3VBRNrXmfc3VzXCiKraJgIMWPosA8KArMUhT4eyqKZgdd
        5VzmHBeKYqsoGEjxoyjwEYriPwAAAP//7J3RboIwFIZfhbtebVKxtXKxxE0g
        msxFnWR65wIq2+ISjXPx6Vd1oNjD0htxJynhAQo/H5Qvp6f/ZZAwUhdRFM/U
        H3jll1EwoygyRQFghUdRMAyKgkGKgl1KUYyCUXf43Q7vy99GwJSgHzWFWoMe
        J4v1IvpK4uU2maEhDEM1OoXK0WlBPXouBnKeii5jduCHfn9wDcaMt0i9hcrY
        dhMnKCFD4DA45DA47DDyORAlF90Z4qc/7M2D8tcBy4s1LiN1GSpm0RIpZgi8
        Boe8Boe9Rj4HouSi+zVrt70effDL/xHjxm9kfkPFbJcjSswQuA4OuQ4Ou458
        DkTJRRezKH5pdibBNSaNxnekvkPFbLqOF1OUnCGQHxySHxyWH2dBEDUZ3QVa
        ohs252Ov/OInYRRIpkDUJcQOrdhsfx1oIBMY/IeA/IeA/ccxA2Xj30bVOWz+
        exKTLnGrqbfpj68whRRGiGRCRCUuSuKVNZevT2vysbJacnw3T69v8Tuatuy7
        fDEACLgRAbuRwkjIX2npGpPZox/6vVb5c0zTO+NoTFQOabUiTzn6mkWrrjxt
        NI2oKYZGGhTqpEELWmkAYahVjA3B5JMlnN+DwBHq/vp1xuGm4ZXf0UbeF2NY
        UsMCYOm4Ne7iaby7ixMDi4BbEUXdQg8JnANo37K6U2fkJCKFtf2g734AAAD/
        /wMAPN/SBj2TAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:35 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:46:15 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:15 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '120720'
      Server:
      - GSE
      Age:
      - '20'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.5
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/yUsYaOTyEAvpk-uZ9U5lffkz2VU\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20150326",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. Ignored unless alt=media is specified.",
               "default": "false",
               "location": "query"
              },
              "alt": {
               "type": "string",
               "description": "Specifies the type of resource representation to return. The default is 'json' to return file metadata. Specifying 'media' will cause the file content to be returned.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:35 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 09 Apr 2015 15:41:36 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:36 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"28i-YUCcAhcv4gf_YBu5QxambJ8/MTQyODU5MzMwMjUwNQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMVWW2/aSBR+51cgr8RTwIPB4SKhLrm02yjQkECqdLtCg+fY
        nmJ73Jkxtyr/fWfGDiEkaZKVukUWiDPn8p1vzsU/SmVrThNidcsW4XQBf/g0
        AutAiakRov7i5Fvcyhx/FEzJh7PzURJ+H0zOopvxcHP1IWx47zvu8PNlNJqc
        GjOQONCGXy2nTas3k2OvH3qLZuBPb44yd7TC8eysbQ/Go/Wnk4k72AyWg2+T
        5XD01TLmAiL/nCZz7SKUMhVd214ul7WAsSACnFJR81hsG6z2wrE1XGG/GSWO
        JPAES9iPRZgnimAmkEg5YCJCAGl7nvduDuveW6JVMpH2DFpB5jlB8QzILw/L
        MplmshfKOKp4IWcx9HwcCagsKQlA9iTPimv2WLKPRoioFgiJJfVythU6/RVR
        IW0a40BRru2m9fp0B+lUn9fSJDCOZZjFswTT6KVcfQAi7IV8FxADq0LJ23Jd
        9FBF9PoDIMOE9fXn+gq76KJ65IvqBgXubN6Zbcbpx7P26jyb34i/KmLTE46D
        cqBUqpJXABMFGLioG2lMYxivU3OA0zSinqKDJfYiIQX4qhKL2k7+xi7CM4iE
        svpRKqtylphz0J1k2D/QspASAskDkeRYeXioxkFITj25J15QWBqRpqpUvtUx
        PQVB6Z2oLw3XQXW3ihrVRn2MWt2m20Xtmtt0vuR5MUJ9uq/crKLOuO52nXbX
        cWouch8qH60H8CqDCAt5bRA+Z9Louh311OqoVcTAfA7ksVG900JVVFfPGKGu
        eWoIodxooe5J3YbWa+e3mGIOidTE/61o0uTvT7Zc4xJ8UL+eqf7y/Zi7uK+3
        ybxzcd0vzn/9QLIL6PbzIHKN/wLjOY9UXDImt2VUvi2V/zHTaZUybiJta3i3
        +lPiv9zKhC2TiGGyO8WEfWo8v32S5YjeMx5j2dPxD/ZBraq6KRkWigSWQqJQ
        ZbHi60Fv/k7UjIjHqA1mhXYVR75RE1Xm+9SDp+DHUe33p7GKxMoqRk4mgF8A
        j6ko+tCUyl7D3Z+b7F/3ajA9DZvOER5MjsUyPkwb0+smWo/ElI1O83eEu56N
        8xb+Xzp0m4mw78Jylm8NxTfwXCSLfaHJuSPqe8YkPlpLEBMB+awx88qYDXEM
        dyPLUg1Zvsxma6toRaPxs4FmwuTtTKhII7zW/vT51tVds/czGaqS0rUHZKLt
        8s4vxss2vY85wlaj5TbaTfewc9hsHLZRAzULVxCrjd4nRG0nDU2xwPgsgPjP
        QB9ooq2daaLXwUDvkDVNAh32KYCPtZ4up226P832hWRfn+vrUjV3DIRKPDPl
        UMSxPJau90RLTtVLpzjGyVWo5vnOidD/d9e8HhRqD+Jjlshiq5mj0m3pX8/m
        xrOyCwAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:36 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:36 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:36 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=JjJiDip-3w9mrrJrYhsStJlPbHY0jPJzIEKerTsI9CbxTp0EbrUaF4AJ1fgyNanUWdiHDo7EyXgMUmdfyb23jw8VWuiRWox_gac1qp20MWyE4iL6N0ghW9X2j8CHAEuW;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:36 GMT;HttpOnly
      - NID=67=Kiul2UZ1qJPpCTWyNphHXh0Bjf_VuxZWUhudrZ4_usvo_2AYtqI5z0rjJki-SIN2QBKHE9IIw30Npbxhbj-0fwHCb9DT-1ySP-ELWujO9SM5JwFJGk7ZzvvM5B8Dk59Y;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:36 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyVXU/bMBSG/0okpOViIk7ahNDghnV8CTSQWiiM3UwmcZMM
        Jw62Q4FfPydZP6Cio1WFkqpXkX18znlf23kM959iojxixiOatFVD01UFJx71
        oyRoq/2r4+1ddd+FA4x9Ra5MeFsNhUgdAIbDoTZsapQFoKHrFugIGqvlGoem
        OLnEiHnheDlqaR6NwTbgKfZAvoAXC4ChGWCUF0zKcy/EMeJaQGlAcJHLU4aR
        z0OMBc977ozT/HlppT5VCXwHCyRd3YAvDxkVewf97lG3ye3BpbBP407rZ693
        d9zvamVUdWHku3lZnted6j1dPN8YDoaU3f/TpXceD//EdtYYdIPf/snZj24S
        Ppz3z8jt1cXL5UnY9I5b1sVNj3T7RyBl0SMSGAwyQiCQ7WCW+nLCdxu6YW3r
        5rbeujIsp7HrNBqapVu/IBitgJ78BJQ9K4VnvODOCczihVK2xiZV4EIRCYLd
        JIvv5NUxICjHkETJvcIwaauIyA6JlChbPadSncBPAoQiJqoSMjwoe8/bWs/z
        9u/xc3uRHc2lTTT8705s5ac30ofSlERyT+V/AJC8y1+fPi51dbdgQQMp5aLK
        Bjgmg+rpQ5kIKXNhgmLsMkrZXYBjCIohlDsdkfHstyAf5hogKCMQjNInlHME
        FYj0MM+I4K4FwXuh6RwuEBOniY+fXONVxlQA4kTIP3yMrhJN19edwWFo3Z5E
        Obi+pzf6+SdCi/o7C7NKnr2D/UiMXhFHTrzzkthAxtQ5RSe1KsHAK3SHCcET
        Bno0EfLY5tz6vSJUwocz76PXn0RcLHxUS9Fl1rgnPfLV4rIo+Tl+HiOeIRK9
        lHKlod2tV1OdNFqFL/Gw8IP1BcXpXlGpLc1VHZ5gRmP+I1ZTY8AdRocHNEuE
        a+xCMD3Ogx4l5cAuYuOh5HzO3HfQe3s4ZPj59FNxa29wO8HthXykFTpQLvNp
        pVFN6tprRt3l/NSEunYNqGvXgLr2DHXNOdS1qk5dc0PdCXUL2jarCVtzzWC7
        nJ+awNasAWzNGsDWnIGtPg+2zarT1trQ9g1tzWrS1loz2i7npya0tWpAW6sG
        tLUWo23VYYs2sH0DW6uasEVrBtvl/NQEtqgGsEU1gC1aCWwLTe5fAAAA//8D
        ADL31UvfIAAA
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:37 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/0AvDjm7u2fQg_dGJLQnhqMUJlYTNzSGh3cF95NWRlQUE/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.2 Mac OS X/10.10.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.UAG8d0gmCfJrTzgwQdWTHqG7fDoilKh-aJDSBAmVdre1CDfUHz0ouOwANUVVDnyWVZKSGa_EBUYZqw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      Expires:
      - Thu, 09 Apr 2015 15:41:37 GMT
      Date:
      - Thu, 09 Apr 2015 15:41:37 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"CUQEQ3s7fSt7ImA9XRRbFUQ."
      Last-Modified:
      - Thu, 09 Apr 2015 15:28:22 GMT
      Content-Encoding:
      - gzip
      Set-Cookie:
      - NID=67=IZyyI2Q05MSWNnYFRnp_8Rn_EDdBBtzAHBqiyDphnsdVECU7Omxx-ckTyfZkW4snAg9zjZB6RbEvTrQmaikhZ1mAW32N6zzATM3H1sBUx9OPGR24GYY3cTRwN-P6yXeG;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:37 GMT;HttpOnly
      - NID=67=em_1K07x2yGRIj6Ab6KBoPF9rX6wDUVpNnqMyDSddlHvj2B_RSBJEPh4SbQ3HATJCK8JS-DoTx2ejjUHj_9XZooYL2z-nHFoIayx13_d-2ibAxjYrby-U7ScIpiPjuNQ;Domain=.google.com;Path=/;Expires=Fri,
        09-Oct-2015 15:41:37 GMT;HttpOnly
      P3p:
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      - CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.5
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOycDW+iSBiA/4rJJsddLhVmnEHxqHtWpd3e2V38bHvZXFiY
        KlcEV8atvV9/gKJWhp5kd1knIWlikQ+HGR+QZ973Vd+uZk7pC1n4tueeC6As
        CSXimp5lu5NzYTjQzmrC24b6QIhVCrZ0/XNhSum8LopPT0/lp0rZW0xEKElY
        bFJvJqy3qXtz4vaJsTCn280NpWx6M/FM9OfEFMMN/GgDEZSBGO/3yaB7u/jm
        lMwMvzzxvIlDot0nlkENMdos3mfiv7aDP18Qw/KnhFA/bKe83c169XOicxJK
        E6tOqBH0xFj86fPSo7+1hnpHr/jVhz6tvps1ldte75M21MvrtUJDta1GeFg/
        PO7eZ+8fPOxMXzSJ4/ii1PzS/mdWXcIHffK3dXn9p+5OP3eH187d4Obf/uW0
        YmoKvhn3HH3YET1LFucL+4tBifiwdBxVDD5NXc6DTiFWA0oAn0noTFIGANdh
        rQ5hGUv4XhXjLVQzeJl4i+dSdMokY8dRsphl2uVNeI6C2FCpTR3SGBifgmUC
        VHG9rDq2+1haEOdcMJzg4G7QuuBTnudBwyhZUXFKZ45Qmi7Iw/pjX+tU0zTf
        PpLn8ywdGjZt14b/+za8Ccctbp8xnzt20J0BNaIRfPN/XR3f1G82/hnbP/d8
        ynP7N9if0AlsrkQvTsMnzsNJNTJsnrGkU2/RUF1jRhoLz1t8mpCZKkaLatDd
        trN99/dJuBg2QRXXa1Qx3n13Xa9TjxpOj/hLh/oNBFUxbd3+Tj41FvSda5FV
        A7zYY2+FOvHrC++p5S1d2gA1VdxfDleanrNeqEbrtosqcWlwadtesteX5Pbm
        Qp3bBboHWiDzhTn4otSJZdP4LlsP3ki501bFYJ3wykF3x/rRF/zm7lJvei4l
        4YCqYvzvKTMTjeJLrsMuPc02hhAEhysFlAS/4IRSQET0arvzJR0ZzpJEi+5y
        Rha2Gb8R/NILR2OzcwB5hE8KRQFBoCN5mmbTap4kwYKkiJ+LJEmQH5IgByTB
        VJLgS5LgIUkwJAkeT9LFrLNq6uOcSaoUJEX8tJIkVfghqcIBSZVUkiovSaoc
        klQJSapkIAl1tNFo+JwvSaggKeKnnSQJ8UMS4oAklEoSekkSOiQJhSShY0m6
        awPj9um+1wlIejcp5yezgnPEBU0RQx3Gs5LED06YA5xwKk74JU7n/WH3517r
        rzP0sR6+gI+/JB6fpOj5SToeMenmFnRHV638EZMLxCKwNMZDFEeIyRwgJqci
        JqcghlMRgxFi8GjEyPP15IO++uPy2c8RL1jYvtj2wQRemBe6IAe2DzJsH2Tb
        PnzIEg5RwhmerOh49HQ/7Of5ZAUL2xfbviRJMj8knb7tgwzbB9m2Tz4kSQ5J
        kjOQ5I6H3lU/V9sHC9sX274kSVV+SDp92wcZtg+ybV/1kKRqSFI1A0l43Gv2
        9FxtHyxsX2z7kiTV+CHp9G0fZNg+yLZ9tUOSaiFJtUy276I56ueuImBh+2Lb
        l6RJ4Yem05d9kCH7IFv2KYc0KSFNSgax917TlQ8XP4CmQuxtxF6SJkp8yg9Q
        p6/2IEPtQbbaC7te2AzA0Qxd3WrdfsfOn6FqwVBEzmWSIcBNsF4wjBwQVE0l
        qHoQrJeM1luH6x0drxe68Pea1tP6ebpwVLjw2IUjjmdzEQcyHDFkOEoJfZW+
        dvI28uFOtzXI1T2gwofHPpxBEzf3JsSBEEcMIY7YQvzr702RE39sdkP/kCdN
        hRPfOHEGTdwEkyMOpDhiSHHEluIgEU0OonBykCWeHI+nVk/Pda4WFV489uIM
        mrgJKEcciHHEEOOILcZBIqIcRCHl4OiY8rs2sLQmvhrkbiJQ4cZjN84gipvA
        csSBHEcMOY7YchwkIstBFFoOMsSW6+TWsW7yD3zFhY2IbQROBr4CEQR/iszN
        cxTmwEpghpXAbCuxG4BE3CuUpSjKaH+Mjk7TVToAXY9y/TEoF6DFoMnJiSiD
        GrwgJnOAmMxATGYjFna9sBmAI29Wl+bDcKLftfp536xqhZ6I9UQtydDU9m3f
        5CbeqMaBpKgxJEWNLSni7hf2BuJonjqavhoPcv/xpxSCIhYUSgpPFjcRRwoH
        mkJhaAqFrSni7hf2BuJInq6k7mh0f32R+/0JFFWNdlWNknmE64E0+JmVAlzU
        N2IWOEqpcLQdAmF/NI4PlzAmWndo5xkuAYrcwR1TyfAjxA9MPKQPAlb+IEhJ
        IEQJK4GiWV6UZZaXtlf6MF8VAYokwl3JMAZS3MzzAh7yCAErkRCkZBKixFQv
        iqZ6UZapXrfdeWwN8i0dVmQT7mqHMZDiZrIX8JBQCFgZhSAlpRAl5ntRNN+L
        stQQw+2LWreXbw2xIq1wV0SMgRQ3s72Ah8xCwEotBCm5hShZSmxdSyxLMTFL
        nw77vfwrHRX5hbtqYgysuKnGAnhIMQSsHEOQkmSIEhVZUFSSBR1dkyVUFPfT
        R3KRa3UjUARR7BRFMoqCI0XBQ/gEYMVPgJQAim+jKJqS+T7noua4UBRbRcFA
        ih9FgXlQFJilKPD3VBRNrXmfc3VzXCiKraJgIMWPosA8KArMUhT4eyqKZgdd
        5VzmHBeKYqsoGEjxoyjwEYriPwAAAP//7J3RboIwFIZfhbtebVKxtXKxxE0g
        msxFnWR65wIq2+ISjXPx6Vd1oNjD0htxJynhAQo/H5Qvp6f/ZZAwUhdRFM/U
        H3jll1EwoygyRQFghUdRMAyKgkGKgl1KUYyCUXf43Q7vy99GwJSgHzWFWoMe
        J4v1IvpK4uU2maEhDEM1OoXK0WlBPXouBnKeii5jduCHfn9wDcaMt0i9hcrY
        dhMnKCFD4DA45DA47DDyORAlF90Z4qc/7M2D8tcBy4s1LiN1GSpm0RIpZgi8
        Boe8Boe9Rj4HouSi+zVrt70effDL/xHjxm9kfkPFbJcjSswQuA4OuQ4Ou458
        DkTJRRezKH5pdibBNSaNxnekvkPFbLqOF1OUnCGQHxySHxyWH2dBEDUZ3QVa
        ohs252Ov/OInYRRIpkDUJcQOrdhsfx1oIBMY/IeA/IeA/ccxA2Xj30bVOWz+
        exKTLnGrqbfpj68whRRGiGRCRCUuSuKVNZevT2vysbJacnw3T69v8Tuatuy7
        fDEACLgRAbuRwkjIX2npGpPZox/6vVb5c0zTO+NoTFQOabUiTzn6mkWrrjxt
        NI2oKYZGGhTqpEELWmkAYahVjA3B5JMlnN+DwBHq/vp1xuGm4ZXf0UbeF2NY
        UsMCYOm4Ne7iaby7ixMDi4BbEUXdQg8JnANo37K6U2fkJCKFtf2g734AAAD/
        /wMAPN/SBj2TAAA=
    http_version: 
  recorded_at: Thu, 09 Apr 2015 15:41:37 GMT
recorded_with: VCR 2.9.3
